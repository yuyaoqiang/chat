{"ast":null,"code":"import \"antd-mobile/lib/toast/style/css\";\nimport _Toast from \"antd-mobile/lib/toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yuanfang/Downloads/Telegram Desktop/\\u5C01\\u5B58/advisory-h5/src/utils/authRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\nimport routers from \"../routers\";\n\nconst AuthRoute = props => {\n  _s();\n\n  const {\n    pathname\n  } = useLocation();\n  const {\n    userState\n  } = props;\n  let {\n    user\n  } = userState;\n  const targetRouteObj = routers.find(item => item.path === pathname);\n  let {\n    component\n  } = targetRouteObj; // 不需要拦截的页面直接放行\n\n  if (targetRouteObj && !targetRouteObj.auth && !user.isLogin) {\n    return /*#__PURE__*/_jsxDEV(Route, {\n      path: pathname,\n      component: component\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (user.isLogin) {\n    // 登录\n    if (pathname === \"/login\") {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: pathname,\n        component: component\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this);\n    }\n  } else {\n    // 未登录\n    if (targetRouteObj && targetRouteObj.auth) {\n      _Toast.info(\"请先登录\", 1.3);\n\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/404\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this);\n    }\n  }\n};\n\n_s(AuthRoute, \"qVMqkCpYCjknUqSjfMln5RFSkbo=\", false, function () {\n  return [useLocation];\n});\n\n_c = AuthRoute;\nexport default inject('userState')(observer(AuthRoute));\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRoute\");","map":{"version":3,"sources":["/Users/yuanfang/Downloads/Telegram Desktop/封存/advisory-h5/src/utils/authRoute.tsx"],"names":["React","observer","inject","Route","Redirect","useLocation","routers","AuthRoute","props","pathname","userState","user","targetRouteObj","find","item","path","component","auth","isLogin","info"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,YAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,kBAA7C;AACA,OAAOC,OAAP,MAAoB,YAApB;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAgB;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,WAAW,EAAhC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAgBF,KAAtB;AACA,MAAI;AAAEG,IAAAA;AAAF,MAAWD,SAAf;AACA,QAAME,cAAmB,GAAGN,OAAO,CAACO,IAAR,CAAcC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAcN,QAArC,CAA5B;AACA,MAAI;AAAEO,IAAAA;AAAF,MAAgBJ,cAApB,CALiC,CAMjC;;AACA,MAAIA,cAAc,IAAI,CAACA,cAAc,CAACK,IAAlC,IAA0C,CAACN,IAAI,CAACO,OAApD,EAA6D;AAC5D,wBAAO,QAAC,KAAD;AAAO,MAAA,IAAI,EAAET,QAAb;AAAuB,MAAA,SAAS,EAAEO;AAAlC;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AACD,MAAIL,IAAI,CAACO,OAAT,EAAkB;AAAE;AACnB,QAAIT,QAAQ,KAAK,QAAjB,EAA2B;AAC1B,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACA,KAFD,MAEO;AACN,0BAAO,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEA,QAAb;AAAuB,QAAA,SAAS,EAAEO;AAAlC;AAAA;AAAA;AAAA;AAAA,cAAP;AACA;AACD,GAND,MAMO;AAAE;AACR,QAAIJ,cAAc,IAAIA,cAAc,CAACK,IAArC,EAA2C;AAC1C,aAAME,IAAN,CAAW,MAAX,EAAmB,GAAnB;;AACA,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACA,KAHD,MAGO;AACN,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACA;AACD;AACD,CAxBD;;GAAMZ,S;UACgBF,W;;;KADhBE,S;AAyBN,eAAeL,MAAM,CAAC,WAAD,CAAN,CAAqBD,QAAQ,CAACM,SAAD,CAA7B,CAAf","sourcesContent":["import React from \"react\"\nimport { Toast } from \"antd-mobile\";\nimport { observer, inject } from \"mobx-react\"\nimport { Route, Redirect, useLocation } from \"react-router-dom\"\nimport routers from \"../routers\"\nconst AuthRoute = (props: any) => {\n const { pathname } = useLocation();\n const { userState } = props;\n let { user } = userState as UserState;\n const targetRouteObj: any = routers.find((item) => item.path === pathname)\n let { component } = targetRouteObj\n // 不需要拦截的页面直接放行\n if (targetRouteObj && !targetRouteObj.auth && !user.isLogin) {\n  return <Route path={pathname} component={component}></Route>\n }\n if (user.isLogin) { // 登录\n  if (pathname === \"/login\") {\n   return <Redirect to=\"/\"></Redirect>\n  } else {\n   return <Route path={pathname} component={component}></Route>\n  }\n } else { // 未登录\n  if (targetRouteObj && targetRouteObj.auth) {\n   Toast.info(\"请先登录\", 1.3)\n   return <Redirect to=\"/login\" />\n  } else {\n   return <Redirect to=\"/404\" />\n  }\n }\n}\nexport default inject('userState')((observer(AuthRoute)));"]},"metadata":{},"sourceType":"module"}