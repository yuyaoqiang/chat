{"ast":null,"code":"import \"antd-mobile/lib/toast/style/css\";\nimport _Toast from \"antd-mobile/lib/toast\";\nimport axios from 'axios';\nconst baseURL = process.env.NODE_ENV === 'production' ? 'api/' : '';\nconst timeout = 12000;\nconst reqeust = axios.create({\n  timeout,\n  transformRequest: [data => {\n    data = JSON.stringify(data);\n    return data;\n  }],\n  transformResponse: [data => {\n    if (typeof data === 'string' && data.startsWith('{')) {\n      data = JSON.parse(data);\n    }\n\n    return data;\n  }]\n}); // 请求拦截器\n\nreqeust.interceptors.request.use(config => {\n  const token = sessionStorage.getItem(\"user\") || {};\n  config.url = `${baseURL}${config.url}`;\n  config.headers.Authorization = token.Authorization;\n  return config;\n}, error => {\n  error.msg = '服务器异常，请联系管理员！';\n  return Promise.resolve(error);\n});\n/**\n *响应拦截器\n* 自定义状态处理\n*/\n\nreqeust.interceptors.response.use(response => {\n  const {\n    data\n  } = response;\n  return data;\n}, error => {\n  _Toast.fail(`${error.response.data.code},${error.response.data.message}`);\n\n  return Promise.reject(error.response);\n});\nexport default reqeust;","map":{"version":3,"sources":["/Users/yuanfang/Downloads/Telegram Desktop/封存/advisory-h5/src/request/request.ts"],"names":["axios","baseURL","process","env","NODE_ENV","timeout","reqeust","create","transformRequest","data","JSON","stringify","transformResponse","startsWith","parse","interceptors","request","use","config","token","sessionStorage","getItem","url","headers","Authorization","error","msg","Promise","resolve","response","fail","code","message","reject"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,OAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,MAAxC,GAAiD,EAAzE;AACA,MAAMC,OAAe,GAAG,KAAxB;AAEA,MAAMC,OAAO,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC5BF,EAAAA,OAD4B;AAE5BG,EAAAA,gBAAgB,EAAE,CAAEC,IAAD,IAAU;AAC5BA,IAAAA,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAP;AACA,WAAOA,IAAP;AACA,GAHiB,CAFU;AAM5BG,EAAAA,iBAAiB,EAAE,CAAEH,IAAD,IAAU;AAC7B,QAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACI,UAAL,CAAgB,GAAhB,CAAhC,EAAsD;AACrDJ,MAAAA,IAAI,GAAGC,IAAI,CAACI,KAAL,CAAWL,IAAX,CAAP;AACA;;AACD,WAAOA,IAAP;AACA,GALkB;AANS,CAAb,CAAhB,C,CAcA;;AACAH,OAAO,CAACS,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAkCC,MAAD,IAAY;AAC5C,QAAMC,KAAU,GAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,KAAkC,EAArD;AACAH,EAAAA,MAAM,CAACI,GAAP,GAAc,GAAErB,OAAQ,GAAEiB,MAAM,CAACI,GAAI,EAArC;AACAJ,EAAAA,MAAM,CAACK,OAAP,CAAeC,aAAf,GAA+BL,KAAK,CAACK,aAArC;AACA,SAAON,MAAP;AACA,CALD,EAKIO,KAAD,IAAW;AACbA,EAAAA,KAAK,CAACC,GAAN,GAAY,eAAZ;AACA,SAAOC,OAAO,CAACC,OAAR,CAAgBH,KAAhB,CAAP;AACA,CARD;AAUA;AACA;AACA;AACA;;AACAnB,OAAO,CAACS,YAAR,CAAqBc,QAArB,CAA8BZ,GAA9B,CAAmCY,QAAD,IAAwB;AACzD,QAAM;AAAEpB,IAAAA;AAAF,MAAWoB,QAAjB;AACA,SAAOpB,IAAP;AACA,CAHD,EAGIgB,KAAD,IAAW;AACb,SAAMK,IAAN,CAAY,GAAEL,KAAK,CAACI,QAAN,CAAepB,IAAf,CAAoBsB,IAAK,IAAGN,KAAK,CAACI,QAAN,CAAepB,IAAf,CAAoBuB,OAAQ,EAAtE;;AACA,SAAOL,OAAO,CAACM,MAAR,CAAeR,KAAK,CAACI,QAArB,CAAP;AACA,CAND;AAOA,eAAevB,OAAf","sourcesContent":["import axios from 'axios'\nimport { Toast } from 'antd-mobile';\nimport { Response } from './entity.d';\nconst baseURL: string = process.env.NODE_ENV === 'production' ? 'api/' : '';\nconst timeout: number = 12000;\n\nconst reqeust = axios.create({\n timeout,\n transformRequest: [(data) => {\n  data = JSON.stringify(data)\n  return data\n }],\n transformResponse: [(data) => {\n  if (typeof data === 'string' && data.startsWith('{')) {\n   data = JSON.parse(data)\n  }\n  return data\n }]\n});\n\n// 请求拦截器\nreqeust.interceptors.request.use((config) => {\n const token: any = sessionStorage.getItem(\"user\") || {}\n config.url = `${baseURL}${config.url}`\n config.headers.Authorization = token.Authorization;\n return config\n}, (error) => {\n error.msg = '服务器异常，请联系管理员！'\n return Promise.resolve(error)\n})\n\n/**\n *响应拦截器\n* 自定义状态处理\n*/\nreqeust.interceptors.response.use((response: Response) => {\n const { data } = response\n return data;\n}, (error) => {\n Toast.fail(`${error.response.data.code},${error.response.data.message}`)\n return Promise.reject(error.response)\n})\nexport default reqeust;"]},"metadata":{},"sourceType":"module"}