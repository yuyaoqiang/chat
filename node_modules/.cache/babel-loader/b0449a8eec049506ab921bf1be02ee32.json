{"ast":null,"code":"import\"antd-mobile/lib/toast/style/css\";import _Toast from\"antd-mobile/lib/toast\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import{observer,inject}from\"mobx-react\";import{Route,Redirect,useLocation}from\"react-router-dom\";import routers from\"../routers\";var AuthRoute=function AuthRoute(props){var _useLocation=useLocation(),pathname=_useLocation.pathname;var userState=props.userState;var _ref=userState,user=_ref.user;var targetRouteObj=routers.find(function(item){return item.path===pathname;});var component=targetRouteObj.component;// 不需要拦截的页面直接放行\nif(targetRouteObj&&!targetRouteObj.auth&&!user.isLogin){return/*#__PURE__*/_jsx(Route,{path:pathname,component:component});}if(user.isLogin){// 登录\nif(pathname===\"/login\"){return/*#__PURE__*/_jsx(Redirect,{to:\"/\"});}else{return/*#__PURE__*/_jsx(Route,{path:pathname,component:component});}}else{// 未登录\nif(targetRouteObj&&targetRouteObj.auth){_Toast.info(\"请先登录\",1.3);return/*#__PURE__*/_jsx(Redirect,{to:\"/login\"});}else{return/*#__PURE__*/_jsx(Redirect,{to:\"/404\"});}}};export default inject('userState')(observer(AuthRoute));","map":{"version":3,"sources":["/Users/yuanfang/Downloads/Telegram Desktop/封存/advisory-h5/src/utils/authRoute.tsx"],"names":["React","observer","inject","Route","Redirect","useLocation","routers","AuthRoute","props","pathname","userState","user","targetRouteObj","find","item","path","component","auth","isLogin","info"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,QAAT,CAAmBC,MAAnB,KAAiC,YAAjC,CACA,OAASC,KAAT,CAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,kBAA7C,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAgB,kBACZH,WAAW,EADC,CACzBI,QADyB,cACzBA,QADyB,IAEzBC,CAAAA,SAFyB,CAEXF,KAFW,CAEzBE,SAFyB,UAGlBA,SAHkB,CAG3BC,IAH2B,MAG3BA,IAH2B,CAIjC,GAAMC,CAAAA,cAAmB,CAAGN,OAAO,CAACO,IAAR,CAAa,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,IAAL,GAAcN,QAAxB,EAAb,CAA5B,CAJiC,GAK3BO,CAAAA,SAL2B,CAKbJ,cALa,CAK3BI,SAL2B,CAMjC;AACA,GAAIJ,cAAc,EAAI,CAACA,cAAc,CAACK,IAAlC,EAA0C,CAACN,IAAI,CAACO,OAApD,CAA6D,CAC5D,mBAAO,KAAC,KAAD,EAAO,IAAI,CAAET,QAAb,CAAuB,SAAS,CAAEO,SAAlC,EAAP,CACA,CACD,GAAIL,IAAI,CAACO,OAAT,CAAkB,CAAE;AACnB,GAAIT,QAAQ,GAAK,QAAjB,CAA2B,CAC1B,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EAAP,CACA,CAFD,IAEO,CACN,mBAAO,KAAC,KAAD,EAAO,IAAI,CAAEA,QAAb,CAAuB,SAAS,CAAEO,SAAlC,EAAP,CACA,CACD,CAND,IAMO,CAAE;AACR,GAAIJ,cAAc,EAAIA,cAAc,CAACK,IAArC,CAA2C,CAC1C,OAAME,IAAN,CAAW,MAAX,CAAmB,GAAnB,EACA,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAAP,CACA,CAHD,IAGO,CACN,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,MAAb,EAAP,CACA,CACD,CACD,CAxBD,CAyBA,cAAejB,CAAAA,MAAM,CAAC,WAAD,CAAN,CAAqBD,QAAQ,CAACM,SAAD,CAA7B,CAAf","sourcesContent":["import React from \"react\"\nimport { Toast } from \"antd-mobile\";\nimport { observer, inject } from \"mobx-react\"\nimport { Route, Redirect, useLocation } from \"react-router-dom\"\nimport routers from \"../routers\"\nconst AuthRoute = (props: any) => {\n const { pathname } = useLocation();\n const { userState } = props;\n let { user } = userState as UserState;\n const targetRouteObj: any = routers.find((item) => item.path === pathname)\n let { component } = targetRouteObj\n // 不需要拦截的页面直接放行\n if (targetRouteObj && !targetRouteObj.auth && !user.isLogin) {\n  return <Route path={pathname} component={component}></Route>\n }\n if (user.isLogin) { // 登录\n  if (pathname === \"/login\") {\n   return <Redirect to=\"/\"></Redirect>\n  } else {\n   return <Route path={pathname} component={component}></Route>\n  }\n } else { // 未登录\n  if (targetRouteObj && targetRouteObj.auth) {\n   Toast.info(\"请先登录\", 1.3)\n   return <Redirect to=\"/login\" />\n  } else {\n   return <Redirect to=\"/404\" />\n  }\n }\n}\nexport default inject('userState')((observer(AuthRoute)));"]},"metadata":{},"sourceType":"module"}