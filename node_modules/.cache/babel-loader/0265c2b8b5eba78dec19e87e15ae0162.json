{"ast":null,"code":"//\n// A couple of methods that make working with buffers more easy.\n//\nBuffer.prototype.getByte = function (offset) {\n  return this[offset];\n};\n\nBuffer.prototype.getSignedByte = function (offset) {\n  return this[offset] > 127 ? this[offset] - 256 : this[offset];\n};\n\nBuffer.prototype.getShort = function (offset, bigEndian) {\n  var shortVal = bigEndian ? (this[offset] << 8) + this[offset + 1] : (this[offset + 1] << 8) + this[offset];\n  return shortVal < 0 ? shortVal + 65536 : shortVal;\n};\n\nBuffer.prototype.getSignedShort = function (offset, bigEndian) {\n  var shortVal = bigEndian ? (this[offset] << 8) + this[offset + 1] : (this[offset + 1] << 8) + this[offset];\n  return shortVal > 32767 ? shortVal - 65536 : shortVal;\n};\n\nBuffer.prototype.getLong = function (offset, bigEndian) {\n  var longVal = bigEndian ? (((this[offset] << 8) + this[offset + 1] << 8) + this[offset + 2] << 8) + this[offset + 3] : (((this[offset + 3] << 8) + this[offset + 2] << 8) + this[offset + 1] << 8) + this[offset];\n  return longVal < 0 ? longVal + 4294967296 : longVal;\n};\n\nBuffer.prototype.getSignedLong = function (offset, bigEndian) {\n  var longVal = bigEndian ? (((this[offset] << 8) + this[offset + 1] << 8) + this[offset + 2] << 8) + this[offset + 3] : (((this[offset + 3] << 8) + this[offset + 2] << 8) + this[offset + 1] << 8) + this[offset];\n  return longVal > 2147483647 ? longVal - 4294967296 : longVal;\n};\n\nBuffer.prototype.getString = function (offset, length) {\n  var string = [];\n\n  for (var i = offset; i < offset + length; i++) {\n    string.push(String.fromCharCode(this[i]));\n  }\n\n  return string.join('');\n};","map":null,"metadata":{},"sourceType":"script"}