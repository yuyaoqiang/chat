{"ast":null,"code":"import \"antd-mobile/lib/list-view/style/css\";\nimport _ListView from \"antd-mobile/lib/list-view\";\nimport \"antd-mobile/lib/pull-to-refresh/style/css\";\nimport _PullToRefresh from \"antd-mobile/lib/pull-to-refresh\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yuanfang/code/chat/src/pages/timeMission/component/task.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { historyTasks } from \"../request\";\nimport { mm_dd_hh_mm_ss2 } from \"@utils/dataTime\";\nimport { status } from \"./entity\";\nimport './style.scss';\nimport { observer, inject } from \"mobx-react\";\nimport usePaginationHooks from \"@hooks/usePaginationHooks\";\nimport { toFixed } from \"@utils/numberUtils\";\n\nconst OffTimer = props => {\n  _s();\n\n  const {\n    commonState\n  } = props;\n  const ref = useRef(null);\n  const [containerHeieght, setContainerHeight] = useState(5);\n  const {\n    setIndicator,\n    setRefresing,\n    indicator,\n    refreshing,\n    dataSource\n  } = usePaginationHooks({\n    queryPages: historyTasks\n  });\n  useEffect(() => {\n    const htmlFont = Number(document.documentElement.style.fontSize.slice(0, 2));\n    const clientHeight = commonState.clientHeight;\n    const footerHeight = commonState.footerHeight; //@ts-ignore\n\n    const top = ReactDOM.findDOMNode(ref.current).offsetTop;\n    setContainerHeight((clientHeight - footerHeight - top) / htmlFont);\n  }, []);\n\n  const returnIconType = status => {\n    if (['FAIL', 'REFUSED'].includes(status)) {\n      return \"fail\";\n    }\n\n    if ('SUCCESS' === status) {\n      return \"success\";\n    }\n\n    return \"waiting\";\n  };\n\n  const row = (rowData, sectionID, rowID) => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"timers-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"order-number\",\n        children: [\"\\u8BA2\\u5355\\u53F7:\", rowData.taskId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: rowData.bankType === 'ALIPAY' ? \"ali-pay-icon\" : \"def-bank-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"min\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\xA5\", toFixed(rowData.cashAmount)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u4EFB\\u52A1\\u5956\\u52B1:\", /*#__PURE__*/_jsxDEV(\"i\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 30\n            }, this), toFixed(rowData.taskBonus)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: mm_dd_hh_mm_ss2(rowData.userLockTimeout)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: returnIconType(rowData.status)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: status[rowData.status]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, rowID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_ListView, {\n    className: \"task-wrap\",\n    ref: ref,\n    style: {\n      height: `${containerHeieght}rem`\n    },\n    dataSource: dataSource,\n    renderFooter: () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: !indicator ? '正在加载中.....' : '没有更多数据'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }, this);\n    },\n    renderRow: row,\n    useBodyScroll: false //@ts-ignore\n    ,\n    pullToRefresh: /*#__PURE__*/_jsxDEV(_PullToRefresh, {\n      refreshing: refreshing,\n      onRefresh: setRefresing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }, this),\n    onEndReached: setIndicator,\n    pageSize: 20\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n};\n\n_s(OffTimer, \"HkG1Espnz9zQwixLxut/pNyfCZo=\", false, function () {\n  return [usePaginationHooks];\n});\n\n_c = OffTimer;\nexport default inject('commonState')(observer(OffTimer));\n\nvar _c;\n\n$RefreshReg$(_c, \"OffTimer\");","map":{"version":3,"sources":["/Users/yuanfang/code/chat/src/pages/timeMission/component/task.tsx"],"names":["React","useEffect","useRef","useState","historyTasks","mm_dd_hh_mm_ss2","status","observer","inject","usePaginationHooks","toFixed","OffTimer","props","commonState","ref","containerHeieght","setContainerHeight","setIndicator","setRefresing","indicator","refreshing","dataSource","queryPages","htmlFont","Number","document","documentElement","style","fontSize","slice","clientHeight","footerHeight","top","ReactDOM","findDOMNode","current","offsetTop","returnIconType","includes","row","rowData","sectionID","rowID","taskId","bankType","cashAmount","taskBonus","userLockTimeout","height","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { historyTasks } from \"../request\"\nimport { mm_dd_hh_mm_ss2 } from \"@utils/dataTime\";\nimport { status } from \"./entity\"\nimport './style.scss'\nimport { ListView, PullToRefresh } from \"antd-mobile\";\nimport { observer, inject } from \"mobx-react\"\nimport usePaginationHooks from \"@hooks/usePaginationHooks\"\nimport { toFixed } from \"@utils/numberUtils\";\nconst OffTimer = (props:any) => {\n   const { commonState } = props;\n   const ref: any = useRef(null);\n   const [containerHeieght, setContainerHeight] = useState(5)\n   const { setIndicator, setRefresing, indicator, refreshing, dataSource } = usePaginationHooks({ queryPages: historyTasks });\n   useEffect(() => {\n      const htmlFont: number = Number(document.documentElement.style.fontSize.slice(0, 2));\n      const clientHeight: number = commonState.clientHeight;\n      const footerHeight: number = commonState.footerHeight;\n      //@ts-ignore\n      const top = ReactDOM.findDOMNode(ref.current).offsetTop\n      setContainerHeight((clientHeight - footerHeight - top) / htmlFont)\n   }, [])\n\n   const returnIconType = (status: string) => {\n      if (['FAIL', 'REFUSED'].includes(status)) {\n         return \"fail\"\n      }\n      if ('SUCCESS' === status) {\n         return \"success\"\n      }\n      return \"waiting\"\n   }\n   const row = (rowData: any, sectionID: any, rowID: any) => {\n      return (\n         <li className=\"timers-item\" key={rowID}>\n            <p className=\"order-number\">订单号:{rowData.taskId}</p>\n            <div className=\"task-bottom\">\n               <div className=\"left\">\n                  <i\n                     className={rowData.bankType === 'ALIPAY' ? \"ali-pay-icon\" : \"def-bank-icon\"}\n                    >\n                  </i>\n               </div>\n               <div className=\"min\">\n                  <span>¥{toFixed(rowData.cashAmount)}</span>\n                  <span>任务奖励:<i></i>{toFixed(rowData.taskBonus)}</span>\n                  <span>{mm_dd_hh_mm_ss2(rowData.userLockTimeout)}</span>\n               </div>\n               <div className=\"right\">\n                  <span className={returnIconType(rowData.status)}></span>\n                  <span>{status[rowData.status]}</span>\n               </div>\n            </div>\n         </li>\n      );\n   };\n   return (\n      <ListView\n         className=\"task-wrap\"\n         ref={ref}\n         style={{ height: `${containerHeieght}rem` }}\n         dataSource={dataSource}\n         renderFooter={\n            () => {\n               return <div style={{ textAlign: 'center' }}>\n                  {!indicator ? '正在加载中.....' : '没有更多数据'}\n               </div>\n            }\n         }\n         renderRow={row}\n         useBodyScroll={false}\n         //@ts-ignore\n         pullToRefresh={<PullToRefresh refreshing={refreshing} onRefresh={setRefresing} />}\n         onEndReached={setIndicator}\n         pageSize={20}\n      />\n   )\n}\nexport default inject('commonState')((observer(OffTimer)));"]},"metadata":{},"sourceType":"module"}