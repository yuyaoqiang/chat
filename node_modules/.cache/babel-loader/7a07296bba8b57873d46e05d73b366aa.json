{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import\"antd-mobile/lib/toast/style/css\";import _Toast from\"antd-mobile/lib/toast\";import _slicedToArray from\"/Users/yuanfang/Downloads/Telegram Desktop/\\u5C01\\u5B58/advisory-h5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useHistory}from\"react-router-dom\";import HeaderBar from\"@components/header\";import{observer,inject}from\"mobx-react\";import{login}from\"./request\";import\"./style.scss\";var Login=function Login(props){var _useHistory=useHistory(),push=_useHistory.push;var userState=props.userState;var history=useHistory();var _useState=useState(),_useState2=_slicedToArray(_useState,2),loginName=_useState2[0],setLoginName=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _ref=userState,updateUser=_ref.updateUser;var toLogin=function toLogin(){if(!loginName||!password){_Toast.fail(\"请输入账号或密码\",1111);return;}_Toast.loading('Loading...',0);login({loginName:loginName,pwd:password}).then(function(res){updateUser({Authorization:res,isLogin:true});_Toast.success(\"欢迎您的到来！\");history.replace(\"/\");});};return/*#__PURE__*/_jsxs(\"div\",{className:\"login\",children:[/*#__PURE__*/_jsx(HeaderBar,{goback:\"/\",title:\"\\u767B\\u5F55\"}),/*#__PURE__*/_jsx(\"div\",{className:\"login-top\",children:/*#__PURE__*/_jsx(\"p\",{onClick:function onClick(){push(\"/register\");},children:\"\\u6CE8\\u518C\\u8D26\\u53F7\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"inputs\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icons account\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u8D26\\u53F7\\u540D\\u79F0\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u8D26\\u53F7\\u6216\\u624B\\u673A\\u53F7\",onChange:function onChange(e){return setLoginName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"inputs\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icons pw\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u767B\\u5F55\\u5BC6\\u7801\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(\"p\",{className:\"login-btn\",onClick:toLogin,children:\"\\u767B\\u5F55\"})]})]});};export default inject('userState')(observer(Login));","map":{"version":3,"sources":["/Users/yuanfang/Downloads/Telegram Desktop/封存/advisory-h5/src/pages/login/index.tsx"],"names":["React","useState","useHistory","HeaderBar","observer","inject","login","Login","props","push","userState","history","loginName","setLoginName","password","setPassword","updateUser","toLogin","fail","loading","pwd","then","res","Authorization","isLogin","success","replace","e","target","value"],"mappings":"oWAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,CACA,OAASC,QAAT,CAAmBC,MAAnB,KAAiC,YAAjC,CACA,OAASC,KAAT,KAAsB,WAAtB,CACA,MAAO,cAAP,CACA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAgB,iBACZN,UAAU,EADE,CACrBO,IADqB,aACrBA,IADqB,IAErBC,CAAAA,SAFqB,CAEPF,KAFO,CAErBE,SAFqB,CAG7B,GAAMC,CAAAA,OAAO,CAAGT,UAAU,EAA1B,CAH6B,cAIKD,QAAQ,EAJb,wCAItBW,SAJsB,eAIXC,YAJW,8BAKGZ,QAAQ,EALX,yCAKtBa,QALsB,eAKZC,WALY,wBAMRL,SANQ,CAMvBM,UANuB,MAMvBA,UANuB,CAO7B,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACrB,GAAI,CAACL,SAAD,EAAc,CAACE,QAAnB,CAA6B,CAC5B,OAAMI,IAAN,CAAW,UAAX,CAAuB,IAAvB,EACA,OACA,CACD,OAAMC,OAAN,CAAc,YAAd,CAA4B,CAA5B,EACAb,KAAK,CAAC,CAAEM,SAAS,CAATA,SAAF,CAAaQ,GAAG,CAAEN,QAAlB,CAAD,CAAL,CAAoCO,IAApC,CAAyC,SAACC,GAAD,CAAc,CACtDN,UAAU,CAAC,CAAEO,aAAa,CAAED,GAAjB,CAAsBE,OAAO,CAAE,IAA/B,CAAD,CAAV,CACA,OAAMC,OAAN,CAAc,SAAd,EACAd,OAAO,CAACe,OAAR,CAAgB,GAAhB,EACA,CAJD,EAKA,CAXD,CAYA,mBACC,aAAK,SAAS,CAAC,OAAf,wBACC,KAAC,SAAD,EAAW,MAAM,CAAE,GAAnB,CAAwB,KAAK,CAAC,cAA9B,EADD,cAEC,YAAK,SAAS,CAAC,WAAf,uBACC,UAAG,OAAO,CAAE,kBAAM,CAAEjB,IAAI,CAAC,WAAD,CAAJ,CAAmB,CAAvC,sCADD,EAFD,cAKC,aAAK,SAAS,CAAC,MAAf,wBACC,WAAG,SAAS,CAAC,QAAb,wBACC,UAAG,SAAS,CAAC,eAAb,EADD,cAEC,kDAFD,cAGC,cAAO,IAAI,CAAC,MAAZ,CAAmB,WAAW,CAAC,wDAA/B,CAA2C,QAAQ,CAAE,kBAACkB,CAAD,QAAOd,CAAAA,YAAY,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB,EAArD,EAHD,GADD,cAMC,WAAG,SAAS,CAAC,QAAb,wBACC,UAAG,SAAS,CAAC,UAAb,EADD,cAEC,kDAFD,cAGC,cAAO,IAAI,CAAC,UAAZ,CAAuB,WAAW,CAAC,gCAAnC,CAA2C,QAAQ,CAAE,kBAACF,CAAD,QAAOZ,CAAAA,WAAW,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EAArD,EAHD,GAND,cAgBC,UAAG,SAAS,CAAC,WAAb,CAAyB,OAAO,CAAEZ,OAAlC,0BAhBD,GALD,GADD,CA0BA,CA7CD,CA8CA,cAAeZ,CAAAA,MAAM,CAAC,WAAD,CAAN,CAAqBD,QAAQ,CAACG,KAAD,CAA7B,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Toast } from \"antd-mobile\"\nimport { useHistory } from \"react-router-dom\";\nimport HeaderBar from \"@components/header\"\nimport { observer, inject } from \"mobx-react\"\nimport { login } from \"./request\"\nimport \"./style.scss\"\nconst Login = (props: any) => {\n const { push } = useHistory();\n const { userState } = props;\n const history = useHistory();\n const [loginName, setLoginName] = useState<string>()\n const [password, setPassword] = useState<string>()\n let { updateUser } = userState as any;\n const toLogin = () => {\n  if (!loginName || !password) {\n   Toast.fail(\"请输入账号或密码\", 1111);\n   return\n  }\n  Toast.loading('Loading...', 0)\n  login({ loginName, pwd: password }).then((res: any) => {\n   updateUser({ Authorization: res, isLogin: true });\n   Toast.success(\"欢迎您的到来！\");\n   history.replace(\"/\")\n  })\n }\n return (\n  <div className=\"login\">\n   <HeaderBar goback={\"/\"} title=\"登录\" />\n   <div className=\"login-top\">\n    <p onClick={() => { push(\"/register\") }}>注册账号</p>\n   </div>\n   <div className=\"main\">\n    <p className=\"inputs\">\n     <i className=\"icons account\"></i>\n     <span>账号名称</span>\n     <input type=\"text\" placeholder=\"请输入账号或手机号\" onChange={(e) => setLoginName(e.target.value)} />\n    </p>\n    <p className=\"inputs\">\n     <i className=\"icons pw\"></i>\n     <span>登录密码</span>\n     <input type=\"password\" placeholder=\"请输入密码\" onChange={(e) => setPassword(e.target.value)} />\n    </p>\n    {/* <p className=\"inputs\">\n     <i className=\"icons code\"></i>\n     <span>验证码</span>\n     <input type=\"text\" placeholder=\"请输入验证码\" onChange={(e) => setPassword(e.target.value)} />\n    </p> */}\n    <p className=\"login-btn\" onClick={toLogin}>登录</p>\n   </div>\n  </div>\n )\n}\nexport default inject('userState')((observer(Login)));\n"]},"metadata":{},"sourceType":"module"}