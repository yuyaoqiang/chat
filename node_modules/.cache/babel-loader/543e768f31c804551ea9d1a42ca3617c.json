{"ast":null,"code":"import axios from \"axios\";\nimport api from \"./request\";\nexport const get = (url, params) => {\n  return api({\n    url,\n    method: 'get',\n    params,\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\n    }\n  });\n};\nexport const post = (url, data, headers) => {\n  debugger;\n  return api({\n    url,\n    method: 'post',\n    data,\n    headers: headers ? headers : {\n      'Content-Type': 'application/json;charset=utf-8'\n    }\n  });\n};\nexport const upload = (url, data) => {\n  const baseURL = process.env.NODE_ENV === 'production' ? 'api/' : '';\n  return axios.post(baseURL + url, data, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};","map":{"version":3,"sources":["/Users/yuanfang/Downloads/Telegram Desktop/封存/advisory-h5/src/request/api.ts"],"names":["axios","api","get","url","params","method","headers","post","data","upload","baseURL","process","env","NODE_ENV"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAGA,OAAO,MAAMC,GAAG,GAAG,CAACC,GAAD,EAAcC,MAAd,KAAiC;AACnD,SAAOH,GAAG,CAAC;AACVE,IAAAA,GADU;AAEVE,IAAAA,MAAM,EAAE,KAFE;AAGVD,IAAAA,MAHU;AAIVE,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAJC,GAAD,CAAV;AAMA,CAPM;AASP,OAAO,MAAMC,IAAI,GAAG,CAACJ,GAAD,EAAcK,IAAd,EAAmCF,OAAnC,KAAqD;AACxE;AACA,SAAOL,GAAG,CAAC;AACVE,IAAAA,GADU;AAEVE,IAAAA,MAAM,EAAE,MAFE;AAGVG,IAAAA,IAHU;AAIVF,IAAAA,OAAO,EAAEA,OAAO,GAAGA,OAAH,GAAa;AAAE,sBAAgB;AAAlB;AAJnB,GAAD,CAAV;AAMA,CARM;AAUP,OAAO,MAAMG,MAAM,GAAG,CAACN,GAAD,EAAcK,IAAd,KAA6B;AAClD,QAAME,OAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,MAAxC,GAAiD,EAAzE;AACA,SAAOb,KAAK,CAACO,IAAN,CAAWG,OAAO,GAAGP,GAArB,EAA0BK,IAA1B,EAAgC;AACtCF,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAD6B,GAAhC,CAAP;AAGA,CALM","sourcesContent":["import axios from \"axios\"\nimport api from \"./request\"\n\nimport { Params, Data } from \"./entity\"\nexport const get = (url: string, params: Params) => {\n return api({\n  url,\n  method: 'get',\n  params,\n  headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8' }\n })\n}\n\nexport const post = (url: string, data: Data | string, headers?: any) => {\n debugger\n return api({\n  url,\n  method: 'post',\n  data,\n  headers: headers ? headers : { 'Content-Type': 'application/json;charset=utf-8' }\n })\n}\n\nexport const upload = (url: string, data: Data) => {\n const baseURL: string = process.env.NODE_ENV === 'production' ? 'api/' : '';\n return axios.post(baseURL + url, data, {\n  headers: { 'Content-Type': 'multipart/form-data' },\n })\n}"]},"metadata":{},"sourceType":"module"}