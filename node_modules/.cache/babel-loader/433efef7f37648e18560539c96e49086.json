{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yuanfang/Downloads/Telegram Desktop/\\u5C01\\u5B58/advisory-h5/src/pages/timeMission/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport NavBar from \"@components/navBar\";\nimport TimerList from \"./component/list\";\nimport TimerInfo from \"./component/info\";\nimport Tasks from \"./component/task\"; //@ts-ignore\n\nimport sound from \"./img/order_done.mp3\";\nimport { timingTasks } from \"./request\";\nimport { observer, inject } from \"mobx-react\";\nimport './style.scss';\nimport { checkSound } from \"@utils/sound\";\n\nconst TimeMission = props => {\n  _s();\n\n  const [checkTab, setCheckTab] = useState(1);\n  const [transType, setTransType] = useState(true);\n  const {\n    banksState\n  } = props;\n  const {\n    mapBanks\n  } = banksState;\n  const soundControl = useRef();\n  const [data, setData] = useState([]);\n\n  const timingTasksHandle = () => {\n    timingTasks({}).then(res => {\n      soundControl.current && soundControl.current.pause();\n      let newData = [];\n      let oldData = [];\n      res.map(item => newData.push(item.taskId));\n      data.map(item => oldData.push(item.taskId));\n      let isHas = newData.filter(v => {\n        return oldData.indexOf(v) == -1;\n      });\n\n      if (isHas.length > 0) {\n        try {\n          console.log(checkSound());\n          checkSound() && soundControl.current.play();\n        } catch (error) {\n          console.log(\"出错\");\n        }\n\n        setData(res);\n      }\n    });\n  };\n\n  useEffect(() => {\n    timingTasksHandle();\n    const id = setInterval(() => {\n      timingTasksHandle();\n    }, 3000);\n    return () => clearInterval(id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeMission-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: checkTab === 1 ? \"check\" : \"\",\n        onClick: () => setCheckTab(1),\n        children: \"\\u4EFB\\u52A1\\u5217\\u8868\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: checkTab === 2 ? \"check\" : \"\",\n        onClick: () => setCheckTab(2),\n        children: \"\\u6211\\u7684\\u4EFB\\u52A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: checkTab === 3 ? \"check\" : \"\",\n        onClick: () => setCheckTab(3),\n        children: \"\\u4EFB\\u52A1\\u8BB0\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      src: sound,\n      ref: soundControl,\n      preload: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }, this), checkTab === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transforms-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: transType ? \"transform-check\" : \"\",\n        onClick: () => setTransType(true),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bank-card-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u94F6\\u884C\\u5361\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: !transType ? \"transform-check\" : \"\",\n        onClick: () => setTransType(false),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"ali-pay-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u652F\\u4ED8\\u5B9D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), checkTab === 1 && /*#__PURE__*/_jsxDEV(TimerList, {\n      transType: transType,\n      data: data,\n      mapBanks: mapBanks,\n      setCheckTab: setCheckTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }, this), checkTab === 2 && /*#__PURE__*/_jsxDEV(TimerInfo, {\n      mapBanks: mapBanks,\n      onClick: () => setCheckTab(3)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }, this), checkTab === 3 && /*#__PURE__*/_jsxDEV(Tasks, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TimeMission, \"6FqJt71cNonMquf57gfKzPkFEYA=\");\n\n_c = TimeMission;\nexport default inject('homeState', 'banksState')(observer(TimeMission));\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeMission\");","map":{"version":3,"sources":["/Users/yuanfang/Downloads/Telegram Desktop/封存/advisory-h5/src/pages/timeMission/index.tsx"],"names":["React","useState","useEffect","useRef","NavBar","TimerList","TimerInfo","Tasks","sound","timingTasks","observer","inject","checkSound","TimeMission","props","checkTab","setCheckTab","transType","setTransType","banksState","mapBanks","soundControl","data","setData","timingTasksHandle","then","res","current","pause","newData","oldData","map","item","push","taskId","isHas","filter","v","indexOf","length","console","log","play","error","id","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport NavBar from \"@components/navBar\"\nimport TimerList from \"./component/list\"\nimport TimerInfo from \"./component/info\"\nimport Tasks from \"./component/task\"\n//@ts-ignore\nimport sound from \"./img/order_done.mp3\"\nimport { timingTasks } from \"./request\"\nimport { observer, inject } from \"mobx-react\"\nimport './style.scss'\nimport { checkSound } from \"@utils/sound\";\nconst TimeMission = (props: any) => {\n   const [checkTab, setCheckTab] = useState(1);\n   const [transType, setTransType] = useState(true);\n   const { banksState } = props;\n   const { mapBanks } = banksState;\n   const soundControl = useRef<any>();\n   const [data, setData] = useState<any>([])\n   const timingTasksHandle = () => {\n      timingTasks({}).then((res: any) => {\n         soundControl.current && soundControl.current.pause()\n         let newData: any = []\n         let oldData: any = []\n         res.map((item: any) => newData.push(item.taskId))\n         data.map((item: any) => oldData.push(item.taskId))\n         let isHas = newData.filter((v: any) => { return oldData.indexOf(v) == -1 })\n         if (isHas.length > 0) {\n            try {\n               console.log(checkSound())\n               checkSound() && soundControl.current.play();\n            } catch (error) {\n               console.log(\"出错\")\n            }\n            setData(res)\n         }\n      })\n   }\n   useEffect(() => {\n      timingTasksHandle();\n      const id = setInterval(() => {\n         timingTasksHandle();\n      }, 3000);\n      return () => clearInterval(id);\n   }, [])\n\n   return (\n      <div className=\"timeMission-wrap\">\n         <div className=\"header\">\n            <span className={checkTab === 1 ? \"check\" : \"\"} onClick={() => setCheckTab(1)}>任务列表</span>\n            <span className={checkTab === 2 ? \"check\" : \"\"} onClick={() => setCheckTab(2)}>我的任务</span>\n            <span className={checkTab === 3 ? \"check\" : \"\"} onClick={() => setCheckTab(3)}>任务记录</span>\n         </div>\n         <audio src={sound} ref={soundControl} preload=\"\" />\n         {checkTab === 1 && (\n            <div className=\"transforms-wrap\">\n               <p className={transType ? \"transform-check\" : \"\"} onClick={() => setTransType(true)}>\n                  <i className=\"bank-card-icon\"></i>\n                  <span>银行卡</span>\n               </p>\n               <p className={!transType ? \"transform-check\" : \"\"} onClick={() => setTransType(false)}>\n                  <i className=\"ali-pay-icon\"></i>\n                  <span>支付宝</span>\n               </p>\n            </div>\n         )}\n\n         {checkTab === 1 && <TimerList transType={transType} data={data} mapBanks={mapBanks} setCheckTab={setCheckTab} />}\n         {checkTab === 2 && <TimerInfo mapBanks={mapBanks} onClick={() => setCheckTab(3)} />}\n         {checkTab === 3 && <Tasks />}\n         <NavBar />\n      </div>\n   )\n}\nexport default inject('homeState', 'banksState')((observer(TimeMission)));"]},"metadata":{},"sourceType":"module"}