{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport \"antd-mobile/lib/toast/style/css\";\nimport _Toast from \"antd-mobile/lib/toast\";\n\nvar _jsxFileName = \"/Users/yuanfang/Downloads/Telegram Desktop/\\u5C01\\u5B58/advisory-h5/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Switch } from \"react-router-dom\";\nimport { observer, inject } from \"mobx-react\";\nimport AuthRoute from \"./utils/authRoute\";\nimport { ping } from \"@pages/userInfo/request\";\nimport { banks } from \"@pages/banks/request\";\nimport './App.scss';\n\n_Toast.config({\n  duration: 1.3\n});\n\nconst App = props => {\n  _s();\n\n  const {\n    userState,\n    banksState\n  } = props;\n  const {\n    user\n  } = userState;\n  debugger;\n  const {\n    setBanks\n  } = banksState;\n\n  const pings = () => {\n    ping({}).then(() => {}).catch(err => {});\n  };\n\n  const banksStateHandle = () => {\n    banks().then(data => {\n      debugger;\n      setBanks(data);\n    });\n  };\n\n  useEffect(() => {\n    if (user.isLogin) {\n      banksStateHandle();\n      const id = setInterval(() => {\n        pings();\n      }, 3000);\n      return () => clearInterval(id);\n    } else {\n      console.log(1111);\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(AuthRoute, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default inject('userState', 'banksState')(observer(App));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yuanfang/Downloads/Telegram Desktop/封存/advisory-h5/src/App.tsx"],"names":["React","useEffect","Switch","observer","inject","AuthRoute","ping","banks","config","duration","App","props","userState","banksState","user","setBanks","pings","then","catch","err","banksStateHandle","data","isLogin","id","setInterval","clearInterval","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAwB,kBAAxB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,OAAO,YAAP;;AAEA,OAAMC,MAAN,CAAa;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAb;;AACA,MAAMC,GAAG,GAAIC,KAAD,IAAgB;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA4BF,KAAlC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAWF,SAAjB;AACA;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeF,UAArB;;AACA,QAAMG,KAAK,GAAG,MAAM;AAClBV,IAAAA,IAAI,CAAC,EAAD,CAAJ,CAASW,IAAT,CAAc,MAAM,CAAG,CAAvB,EAAyBC,KAAzB,CAA+BC,GAAG,IAAI,CACrC,CADD;AAED,GAHD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7Bb,IAAAA,KAAK,GAAGU,IAAR,CAAaI,IAAI,IAAI;AACnB;AACAN,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACD,KAHD;AAID,GALD;;AAMApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,IAAI,CAACQ,OAAT,EAAkB;AAChBF,MAAAA,gBAAgB;AAChB,YAAMG,EAAE,GAAGC,WAAW,CAAC,MAAM;AAC3BR,QAAAA,KAAK;AACN,OAFqB,EAEnB,IAFmB,CAAtB;AAGA,aAAO,MAAMS,aAAa,CAACF,EAAD,CAA1B;AACD,KAND,MAMO;AACLG,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD;AACF,GAVQ,EAUN,CAACb,IAAD,CAVM,CAAT;AAYA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CAlCD;;GAAMJ,G;;KAAAA,G;AAoCN,eAAeN,MAAM,CAAC,WAAD,EAAa,YAAb,CAAN,CAAkCD,QAAQ,CAACO,GAAD,CAA1C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Switch, } from \"react-router-dom\"\nimport { observer, inject } from \"mobx-react\";\nimport AuthRoute from \"./utils/authRoute\"\nimport { ping } from \"@pages/userInfo/request\"\nimport { banks } from \"@pages/banks/request\"\nimport './App.scss';\nimport { Toast } from 'antd-mobile';\nToast.config({ duration: 1.3 })\nconst App = (props: any) => {\n  const { userState, banksState } = props;\n  const { user } = userState;\n  debugger\n  const { setBanks } = banksState;\n  const pings = () => {\n    ping({}).then(() => { }).catch(err => {\n    })\n  }\n  const banksStateHandle = () => {\n    banks().then(data => {\n      debugger\n      setBanks(data)\n    })\n  }\n  useEffect(() => {\n    if (user.isLogin) {\n      banksStateHandle()\n      const id = setInterval(() => {\n        pings();\n      }, 3000);\n      return () => clearInterval(id);\n    } else {\n      console.log(1111)\n    }\n  }, [user])\n\n  return (\n    <>\n      <Switch>\n        <AuthRoute ></AuthRoute>\n      </Switch>\n    </>\n  )\n}\n\nexport default inject('userState','banksState')((observer(App)));"]},"metadata":{},"sourceType":"module"}