{"ast":null,"code":"import axios from 'axios';\nconst baseURL = process.env.NODE_ENV === 'production' ? '' : '';\nconst timeout = 60000;\nconst reqeust = axios.create({\n  timeout,\n  transformRequest: [data => {\n    if (typeof data === 'string') {\n      return data;\n    }\n\n    data = JSON.stringify(data);\n    return data;\n  }],\n  transformResponse: [data => {\n    if (typeof data === 'string' && data.startsWith('{')) {\n      data = JSON.parse(data);\n    }\n\n    return data;\n  }]\n}); // 请求拦截器\n\nreqeust.interceptors.request.use(config => {\n  const token = sessionStorage.getItem(\"user\");\n  const url = sessionStorage.getItem(\"text-url\"); //@ts-ignore\n\n  const addr = window.myConfig ? window.myConfig.add : 'https://api.rgroiho.cn';\n  const strToken = JSON.parse(token) || {};\n\n  if (process.env.NODE_ENV === 'production') {\n    config.url = url ? `${url}${baseURL}${config.url}` : `${addr}${config.url}`;\n  } else {\n    config.url = `${baseURL}${config.url}`;\n  }\n\n  config.headers.Authorization = strToken.Authorization;\n  return config;\n}, error => {\n  error.msg = '服务器异常，请联系管理员！';\n  return Promise.resolve(error);\n});\n/**\n *响应拦截器\n* 自定义状态处理\n*/\n\nreqeust.interceptors.response.use(response => {\n  const {\n    data,\n    status\n  } = response;\n\n  if (!data) {\n    return data;\n  }\n\n  if (typeof data === 'string' && (data.startsWith('{') || data.startsWith('['))) {\n    return JSON.parse(data);\n  } else {\n    return data;\n  }\n}, error => {\n  // Toast.fail(`${error.response && error.response.data?error.response.data.message:'请求错误'}`)\n  return Promise.reject(error.response);\n});\nexport default reqeust;","map":{"version":3,"sources":["/Users/yuanfang/Downloads/Telegram Desktop/封存/advisory-h5/src/request/request.ts"],"names":["axios","baseURL","process","env","NODE_ENV","timeout","reqeust","create","transformRequest","data","JSON","stringify","transformResponse","startsWith","parse","interceptors","request","use","config","token","sessionStorage","getItem","url","addr","window","myConfig","add","strToken","headers","Authorization","error","msg","Promise","resolve","response","status","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,OAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,EAAxC,GAA6C,EAArE;AACA,MAAMC,OAAe,GAAG,KAAxB;AAEA,MAAMC,OAAO,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC5BF,EAAAA,OAD4B;AAE5BG,EAAAA,gBAAgB,EAAE,CAAEC,IAAD,IAAU;AAC5B,QAAI,OAAQA,IAAR,KAAkB,QAAtB,EAAgC;AAC/B,aAAOA,IAAP;AACA;;AACDA,IAAAA,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAP;AACA,WAAOA,IAAP;AACA,GANiB,CAFU;AAS5BG,EAAAA,iBAAiB,EAAE,CAAEH,IAAD,IAAU;AAC7B,QAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACI,UAAL,CAAgB,GAAhB,CAAhC,EAAsD;AACrDJ,MAAAA,IAAI,GAAGC,IAAI,CAACI,KAAL,CAAWL,IAAX,CAAP;AACA;;AACD,WAAOA,IAAP;AACA,GALkB;AATS,CAAb,CAAhB,C,CAiBA;;AACAH,OAAO,CAACS,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAkCC,MAAD,IAAY;AAC5C,QAAMC,KAAU,GAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAnB;AACA,QAAMC,GAAG,GAAGF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAZ,CAF4C,CAG5C;;AACA,QAAME,IAAI,GAAGC,MAAM,CAACC,QAAP,GAAkBD,MAAM,CAACC,QAAP,CAAgBC,GAAlC,GAAwC,wBAArD;AACA,QAAMC,QAAQ,GAAGjB,IAAI,CAACI,KAAL,CAAWK,KAAX,KAAqB,EAAtC;;AACA,MAAIjB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAC1Cc,IAAAA,MAAM,CAACI,GAAP,GAAaA,GAAG,GAAI,GAAEA,GAAI,GAAErB,OAAQ,GAAEiB,MAAM,CAACI,GAAI,EAAjC,GAAsC,GAAEC,IAAK,GAAEL,MAAM,CAACI,GAAI,EAA1E;AACA,GAFD,MAEO;AACNJ,IAAAA,MAAM,CAACI,GAAP,GAAc,GAAErB,OAAQ,GAAEiB,MAAM,CAACI,GAAI,EAArC;AACA;;AACDJ,EAAAA,MAAM,CAACU,OAAP,CAAeC,aAAf,GAA+BF,QAAQ,CAACE,aAAxC;AACA,SAAOX,MAAP;AACA,CAbD,EAaIY,KAAD,IAAW;AACbA,EAAAA,KAAK,CAACC,GAAN,GAAY,eAAZ;AACA,SAAOC,OAAO,CAACC,OAAR,CAAgBH,KAAhB,CAAP;AACA,CAhBD;AAkBA;AACA;AACA;AACA;;AACAxB,OAAO,CAACS,YAAR,CAAqBmB,QAArB,CAA8BjB,GAA9B,CAAmCiB,QAAD,IAAwB;AACzD,QAAM;AAAEzB,IAAAA,IAAF;AAAO0B,IAAAA;AAAP,MAAkBD,QAAxB;;AACA,MAAI,CAACzB,IAAL,EAAW;AACV,WAAOA,IAAP;AACA;;AACD,MAAI,OAAOA,IAAP,KAAgB,QAAhB,KAA6BA,IAAI,CAACI,UAAL,CAAgB,GAAhB,KAAwBJ,IAAI,CAACI,UAAL,CAAgB,GAAhB,CAArD,CAAJ,EAAgF;AAC/E,WAAOH,IAAI,CAACI,KAAL,CAAWL,IAAX,CAAP;AACA,GAFD,MAEO;AACN,WAAOA,IAAP;AACA;AACD,CAVD,EAUIqB,KAAD,IAAW;AACb;AACA,SAAOE,OAAO,CAACI,MAAR,CAAeN,KAAK,CAACI,QAArB,CAAP;AACA,CAbD;AAcA,eAAe5B,OAAf","sourcesContent":["import axios from 'axios'\nimport { Toast } from 'antd-mobile';\nimport { Response } from './entity.d';\nconst baseURL: string = process.env.NODE_ENV === 'production' ? '' : '';\nconst timeout: number = 60000;\n\nconst reqeust = axios.create({\n timeout,\n transformRequest: [(data) => {\n  if (typeof (data) === 'string') {\n   return data\n  }\n  data = JSON.stringify(data)\n  return data\n }],\n transformResponse: [(data) => {\n  if (typeof data === 'string' && data.startsWith('{')) {\n   data = JSON.parse(data)\n  }\n  return data\n }]\n});\n\n// 请求拦截器\nreqeust.interceptors.request.use((config) => {\n const token: any = sessionStorage.getItem(\"user\")\n const url = sessionStorage.getItem(\"text-url\")\n //@ts-ignore\n const addr = window.myConfig ? window.myConfig.add : 'https://api.rgroiho.cn'\n const strToken = JSON.parse(token) || {}\n if (process.env.NODE_ENV === 'production') {\n  config.url = url ? `${url}${baseURL}${config.url}` : `${addr}${config.url}`\n } else {\n  config.url = `${baseURL}${config.url}`\n }\n config.headers.Authorization = strToken.Authorization;\n return config\n}, (error) => {\n error.msg = '服务器异常，请联系管理员！'\n return Promise.resolve(error)\n})\n\n/**\n *响应拦截器\n* 自定义状态处理\n*/\nreqeust.interceptors.response.use((response: Response) => {\n const { data,status } = response\n if (!data) {\n  return data;\n }\n if (typeof data === 'string' && (data.startsWith('{') || data.startsWith('['))) {\n  return JSON.parse(data);\n } else {\n  return data\n }\n}, (error) => {\n // Toast.fail(`${error.response && error.response.data?error.response.data.message:'请求错误'}`)\n return Promise.reject(error.response)\n})\nexport default reqeust;"]},"metadata":{},"sourceType":"module"}