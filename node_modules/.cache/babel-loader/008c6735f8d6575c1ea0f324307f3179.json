{"ast":null,"code":"import axios from \"axios\";\nimport api from \"./request\";\nexport const get = (url, params) => {\n  return api({\n    url,\n    method: 'get',\n    params,\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\n    }\n  });\n};\nexport const post = (url, data, headers) => {\n  return api({\n    url,\n    method: 'post',\n    data,\n    headers: headers ? headers : {\n      'Content-Type': 'application/json;charset=utf-8'\n    }\n  });\n};\nexport const put = (url, params, headers) => {\n  return api({\n    url,\n    method: 'put',\n    params,\n    headers: headers ? headers : {\n      'Content-Type': 'application/json;charset=utf-8'\n    }\n  });\n};\nexport const upload = (url, data, params) => {\n  const baseURL = process.env.NODE_ENV === 'production' ? '' : '';\n  const token = sessionStorage.getItem(\"user\");\n  const strToken = JSON.parse(token) || {};\n  const textUrl = sessionStorage.getItem(\"text-url\");\n  const hostname = window.location.hostname;\n\n  if (process.env.NODE_ENV === 'production') {\n    // url = textUrl ? `${textUrl}${url}` : `https://api.rgroiho.cn${url}`\n    // @ts-ignore\n    url = textUrl ? `${textUrl}${url}` : `${window.myConfig.domain}${url}`;\n  }\n\n  return axios.post(baseURL + url, data, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      Authorization: strToken.Authorization,\n      ...params\n    }\n  });\n};","map":{"version":3,"sources":["/Users/yuanfang/Downloads/Telegram Desktop/封存/advisory-h5/src/request/api.ts"],"names":["axios","api","get","url","params","method","headers","post","data","put","upload","baseURL","process","env","NODE_ENV","token","sessionStorage","getItem","strToken","JSON","parse","textUrl","hostname","window","location","myConfig","domain","Authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAGA,OAAO,MAAMC,GAAG,GAAG,CAACC,GAAD,EAAcC,MAAd,KAAiC;AACnD,SAAOH,GAAG,CAAC;AACVE,IAAAA,GADU;AAEVE,IAAAA,MAAM,EAAE,KAFE;AAGVD,IAAAA,MAHU;AAIVE,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAJC,GAAD,CAAV;AAMA,CAPM;AASP,OAAO,MAAMC,IAAI,GAAG,CAACJ,GAAD,EAAcK,IAAd,EAAmCF,OAAnC,KAAqD;AACxE,SAAOL,GAAG,CAAC;AACVE,IAAAA,GADU;AAEVE,IAAAA,MAAM,EAAE,MAFE;AAGVG,IAAAA,IAHU;AAIVF,IAAAA,OAAO,EAAEA,OAAO,GAAGA,OAAH,GAAa;AAAE,sBAAgB;AAAlB;AAJnB,GAAD,CAAV;AAMA,CAPM;AASP,OAAO,MAAMG,GAAG,GAAG,CAACN,GAAD,EAAcC,MAAd,EAAqCE,OAArC,KAAuD;AACzE,SAAOL,GAAG,CAAC;AACVE,IAAAA,GADU;AAEVE,IAAAA,MAAM,EAAE,KAFE;AAGVD,IAAAA,MAHU;AAIVE,IAAAA,OAAO,EAAEA,OAAO,GAAGA,OAAH,GAAa;AAAE,sBAAgB;AAAlB;AAJnB,GAAD,CAAV;AAMA,CAPM;AASP,OAAO,MAAMI,MAAM,GAAG,CAACP,GAAD,EAAcK,IAAd,EAA0BJ,MAA1B,KAA0C;AAC/D,QAAMO,OAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,EAAxC,GAA6C,EAArE;AACA,QAAMC,KAAU,GAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAnB;AACA,QAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWL,KAAX,KAAqB,EAAtC;AACA,QAAMM,OAAO,GAAGL,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;AACA,QAAMK,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBF,QAAjC;;AACA,MAAIV,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAC1C;AACA;AACAX,IAAAA,GAAG,GAAGkB,OAAO,GAAI,GAAEA,OAAQ,GAAElB,GAAI,EAApB,GAAyB,GAAGoB,MAAM,CAACE,QAAP,CAAgBC,MAAO,GAAEvB,GAAI,EAAtE;AACA;;AACD,SAAOH,KAAK,CAACO,IAAN,CAAWI,OAAO,GAAGR,GAArB,EAA0BK,IAA1B,EAAgC;AACtCF,IAAAA,OAAO,EAAE;AAAE,sBAAgB,qBAAlB;AAAyCqB,MAAAA,aAAa,EAAET,QAAQ,CAACS,aAAjE;AAAgF,SAAGvB;AAAnF;AAD6B,GAAhC,CAAP;AAGA,CAdM","sourcesContent":["import axios from \"axios\"\nimport api from \"./request\"\n\nimport { Params, Data } from \"./entity\"\nexport const get = (url: string, params: Params) => {\n return api({\n  url,\n  method: 'get',\n  params,\n  headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8' }\n })\n}\n\nexport const post = (url: string, data: Data | string, headers?: any) => {\n return api({\n  url,\n  method: 'post',\n  data,\n  headers: headers ? headers : { 'Content-Type': 'application/json;charset=utf-8' }\n })\n}\n\nexport const put = (url: string, params: Data | string, headers?: any) => {\n return api({\n  url,\n  method: 'put',\n  params,\n  headers: headers ? headers : { 'Content-Type': 'application/json;charset=utf-8' }\n })\n}\n\nexport const upload = (url: string, data: Data, params: any) => {\n const baseURL: string = process.env.NODE_ENV === 'production' ? '' : '';\n const token: any = sessionStorage.getItem(\"user\")\n const strToken = JSON.parse(token) || {}\n const textUrl = sessionStorage.getItem(\"text-url\")\n const hostname = window.location.hostname;\n if (process.env.NODE_ENV === 'production') {\n  // url = textUrl ? `${textUrl}${url}` : `https://api.rgroiho.cn${url}`\n  // @ts-ignore\n  url = textUrl ? `${textUrl}${url}` : `${ window.myConfig.domain}${url}`\n }\n return axios.post(baseURL + url, data, {\n  headers: { 'Content-Type': 'multipart/form-data', Authorization: strToken.Authorization, ...params },\n })\n}"]},"metadata":{},"sourceType":"module"}