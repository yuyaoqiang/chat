{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yuanfang/Downloads/Telegram Desktop/\\u5C01\\u5B58/advisory-h5/src/pages/activity/component/tabs/index.tsx\";\nimport React from \"react\";\n\nconst Tabs = props => {\n  const {\n    list,\n    activity,\n    setType\n  } = props;\n\n  const onChange = check => {\n    setType(check);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"tabs\",\n    children: list.map((l, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `item ${activity === l.id ? 'ati' : ''}`,\n      onClick: () => onChange(l.id),\n      children: l.name\n    }, l.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 24\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Tabs;\nexport default Tabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabs\");","map":{"version":3,"sources":["/Users/yuanfang/Downloads/Telegram Desktop/封存/advisory-h5/src/pages/activity/component/tabs/index.tsx"],"names":["React","Tabs","props","list","activity","setType","onChange","check","map","l","i","id","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAQA,MAAMC,IAAI,GAAIC,KAAD,IAAsB;AAClC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,MAA8BH,KAApC;;AACA,QAAMI,QAAQ,GAAIC,KAAD,IAAmB;AACnCF,IAAAA,OAAO,CAACE,KAAD,CAAP;AACA,GAFD;;AAGA,sBACC;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA,cAEEJ,IAAI,CAACK,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,kBAAU;AAAe,MAAA,SAAS,EAAG,QAAON,QAAQ,KAAKK,CAAC,CAACE,EAAf,GAAoB,KAApB,GAA4B,EAAG,EAAjE;AAAoE,MAAA,OAAO,EAAE,MAAML,QAAQ,CAACG,CAAC,CAACE,EAAH,CAA3F;AAAA,gBAAoGF,CAAC,CAACG;AAAtG,OAASH,CAAC,CAACE,EAAX;AAAA;AAAA;AAAA;AAAA,YAAnB;AAFF;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAZD;;KAAMV,I;AAcN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n\ntype TabsProps = {\n list: any[],\n activity: number | string,\n setType: (args: number) => void\n}\n\nconst Tabs = (props: TabsProps) => {\n const { list, activity, setType } = props;\n const onChange = (check: number) => {\n  setType(check)\n }\n return (\n  <ul className=\"tabs\">\n   {\n    list.map((l, i) => <li key={l.id} className={`item ${activity === l.id ? 'ati' : ''}`} onClick={() => onChange(l.id)}>{l.name}</li>)\n   }\n  </ul>\n )\n}\n\nexport default Tabs;"]},"metadata":{},"sourceType":"module"}