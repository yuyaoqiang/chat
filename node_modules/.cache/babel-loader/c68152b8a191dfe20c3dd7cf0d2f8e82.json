{"ast":null,"code":"export const bankNumberHide = data => {\n  if (!data) return \"\";\n  return data.replace(/\\s/g, '').replace(/(\\d{4})\\d+(\\d{4})$/, \"**** **** **** $2\");\n};\nexport const toFixed = num => {\n  if (!num) return 0.00;\n  return num.toFixed(2);\n};\nexport const zhNumber = num => {\n  if (!num) return \"\";\n  let number = num + \"\";\n  let reslut = number.split(\".\")[0];\n\n  if (reslut.length == 1) {\n    return \"个\";\n  }\n\n  if (reslut.length == 2) {\n    return \"十\";\n  }\n\n  if (reslut.length == 3) {\n    return \"百\";\n  }\n\n  if (reslut.length == 4) {\n    return \"千\";\n  }\n\n  if (reslut.length == 5) {\n    return \"万\";\n  }\n\n  return num.toFixed(2);\n};","map":{"version":3,"sources":["/Users/yuanfang/code/advisory-h5/src/utils/numberUtils.tsx"],"names":["bankNumberHide","data","replace","toFixed","num","zhNumber","number","reslut","split","length"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAIC,IAAD,IAAkB;AAC/C,MAAG,CAACA,IAAJ,EAAW,OAAO,EAAP;AACX,SAAOA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAoB,EAApB,EAAwBA,OAAxB,CAAgC,oBAAhC,EAAsD,mBAAtD,CAAP;AACA,CAHM;AAKP,OAAO,MAAMC,OAAO,GAAIC,GAAD,IAAiB;AACvC,MAAI,CAACA,GAAL,EAAU,OAAO,IAAP;AACV,SAAOA,GAAG,CAACD,OAAJ,CAAY,CAAZ,CAAP;AACA,CAHM;AAIP,OAAO,MAAME,QAAQ,GAAID,GAAD,IAAiB;AACxC,MAAI,CAACA,GAAL,EAAU,OAAO,EAAP;AACV,MAAIE,MAAM,GAAGF,GAAG,GAAG,EAAnB;AACA,MAAIG,MAAM,GAAGD,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAb;;AACA,MAAID,MAAM,CAACE,MAAP,IAAiB,CAArB,EAAwB;AACvB,WAAO,GAAP;AACA;;AACD,MAAIF,MAAM,CAACE,MAAP,IAAiB,CAArB,EAAwB;AACvB,WAAO,GAAP;AACA;;AACD,MAAIF,MAAM,CAACE,MAAP,IAAiB,CAArB,EAAwB;AACvB,WAAO,GAAP;AACA;;AACD,MAAIF,MAAM,CAACE,MAAP,IAAiB,CAArB,EAAwB;AACvB,WAAO,GAAP;AACA;;AACD,MAAIF,MAAM,CAACE,MAAP,IAAiB,CAArB,EAAwB;AACvB,WAAO,GAAP;AACA;;AACD,SAAOL,GAAG,CAACD,OAAJ,CAAY,CAAZ,CAAP;AACA,CApBM","sourcesContent":["export const bankNumberHide = (data: string) => {\n if(!data)  return \"\"\n return data.replace(/\\s/g, '').replace(/(\\d{4})\\d+(\\d{4})$/, \"**** **** **** $2\")\n}\n\nexport const toFixed = (num: number) => {\n if (!num) return 0.00;\n return num.toFixed(2)\n}\nexport const zhNumber = (num: number) => {\n if (!num) return \"\";\n let number = num + \"\"\n let reslut = number.split(\".\")[0];\n if (reslut.length == 1) {\n  return \"个\"\n }\n if (reslut.length == 2) {\n  return \"十\"\n }\n if (reslut.length == 3) {\n  return \"百\"\n }\n if (reslut.length == 4) {\n  return \"千\"\n }\n if (reslut.length == 5) {\n  return \"万\"\n }\n return num.toFixed(2)\n}"]},"metadata":{},"sourceType":"module"}