{"ast":null,"code":"import \"antd-mobile/lib/list-view/style/css\";\nimport _ListView from \"antd-mobile/lib/list-view\";\n\nvar _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nlet rData = [];\nconst listDataSource = new _ListView.DataSource({\n  rowHasChanged: (row1, row2) => row1 !== row2\n});\n\nconst usePaginationHooks = props => {\n  _s();\n\n  const [config, setConfig] = useState({\n    indicator: false,\n    refreshing: true,\n    page: 1,\n    size: 100,\n    isLastPage: false,\n    dataSource: listDataSource\n  });\n  const {\n    queryPages,\n    params\n  } = props;\n  /**\n   * 下拉刷新\n   */\n\n  const refreshHandle = () => {\n    setTimeout(() => {\n      queryPages({\n        page: 1,\n        size: config.size,\n        rows: config.size,\n        ...params\n      }).then(res => {\n        const {\n          last,\n          content,\n          number\n        } = res;\n        rData = content;\n        setConfig({ ...config,\n          refreshing: false,\n          indicator: last ? true : false,\n          isLastPage: last,\n          dataSource: config.dataSource.cloneWithRows(rData),\n          page: number + 1\n        });\n      }).catch(err => {\n        setConfig({ ...config,\n          refreshing: false,\n          isLastPage: false,\n          indicator: false\n        });\n      });\n    }, 500);\n  };\n  /**\n  * 上拉更多\n  */\n\n\n  const indicatorHandle = () => {\n    queryPages({\n      page: config.page + 1,\n      size: config.size,\n      rows: config.size,\n      ...params\n    }).then(res => {\n      const {\n        last,\n        content\n      } = res;\n      rData = [...rData, ...content];\n      setConfig({ ...config,\n        indicator: false,\n        isLastPage: last,\n        dataSource: config.dataSource.cloneWithRows(rData),\n        page: config.page + 1\n      });\n    }).catch(err => {\n      setConfig({ ...config,\n        indicator: false,\n        isLastPage: false,\n        page: config.page + 1\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (!config.refreshing) return;\n    refreshHandle();\n  }, [config.refreshing]);\n  useEffect(() => {\n    if (config.isLastPage) return;\n    config.indicator && indicatorHandle();\n  }, [config.indicator]);\n  return {\n    setIndicator: () => setConfig({ ...config,\n      indicator: true\n    }),\n    setRefresing: () => setConfig({ ...config,\n      refreshing: true\n    }),\n    refreshHandle,\n    indicatorHandle,\n    indicator: config.indicator,\n    refreshing: config.refreshing,\n    isLastPage: config.isLastPage,\n    dataSource: config.dataSource\n  };\n};\n\n_s(usePaginationHooks, \"wB4pplcf/lXniTZcpu4wKy4PS+c=\");\n\nexport default usePaginationHooks;","map":{"version":3,"sources":["/Users/yuanfang/code/advisory-h5/src/hooks/usePaginationHooks.tsx"],"names":["useState","useEffect","rData","listDataSource","DataSource","rowHasChanged","row1","row2","usePaginationHooks","props","config","setConfig","indicator","refreshing","page","size","isLastPage","dataSource","queryPages","params","refreshHandle","setTimeout","rows","then","res","last","content","number","cloneWithRows","catch","err","indicatorHandle","setIndicator","setRefresing"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\"\nimport { ListView } from \"antd-mobile\";\n\ntype QueryParams = {\n page: number,\n size: number\n}\n\ntype PropsData = {\n queryPages: (arg: QueryParams) => Promise<any>\n}\n\nlet rData: any[] = []\nconst listDataSource = new ListView.DataSource({\n rowHasChanged: (row1: any, row2: any) => row1 !== row2,\n});\n\nconst usePaginationHooks = (props: PropsData|any ) => {\n const [config, setConfig] = useState({ indicator: false, refreshing: true, page: 1, size: 100, isLastPage: false, dataSource: listDataSource })\n const { queryPages,params } = props;\n\n /**\n  * 下拉刷新\n  */\n const refreshHandle = () => {\n  setTimeout(() => {\n   queryPages({ page: 1, size: config.size,rows:config.size,...params }).then((res:any) => {\n    const { last, content,number } = res;\n    rData = content\n    setConfig({\n     ...config,\n     refreshing: false,\n     indicator: last?true:false,\n     isLastPage:last,\n     dataSource: config.dataSource.cloneWithRows(rData),\n     page: number+1\n    })\n   }).catch((err:any) => {\n    setConfig({\n     ...config,\n     refreshing: false,\n     isLastPage: false,\n     indicator: false,\n    })\n   })\n  }, 500);\n };\n\n /**\n * 上拉更多\n */\n const indicatorHandle = () => {\n  queryPages({ page: config.page + 1, size: config.size,rows:config.size,...params  }).then((res:any) => {\n   const { last, content } = res;\n   rData = [...rData, ...content]\n   setConfig({\n    ...config,\n    indicator: false,\n    isLastPage:last,\n    dataSource: config.dataSource.cloneWithRows(rData),\n    page: config.page + 1\n   })\n  }).catch((err:any) => {\n   setConfig({\n    ...config,\n    indicator: false,\n    isLastPage: false,\n    page: config.page + 1\n   })\n  })\n }\n\n useEffect(() => {\n  if (!config.refreshing) return;\n  refreshHandle();\n }, [config.refreshing])\n\n useEffect(() => {\n  if (config.isLastPage) return;\n  config.indicator && indicatorHandle();\n }, [config.indicator])\n \n return {\n  setIndicator: () => setConfig({ ...config, indicator: true }),\n  setRefresing: () => setConfig({ ...config, refreshing: true }),\n  refreshHandle,\n  indicatorHandle,\n  indicator: config.indicator,\n  refreshing: config.refreshing,\n  isLastPage: config.isLastPage,\n  dataSource: config.dataSource,\n }\n}\nexport default usePaginationHooks;"]},"metadata":{},"sourceType":"module"}