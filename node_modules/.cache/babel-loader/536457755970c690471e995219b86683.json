{"ast":null,"code":"import\"antd-mobile/lib/toast/style/css\";import _Toast from\"antd-mobile/lib/toast\";import axios from'axios';var baseURL=process.env.NODE_ENV==='production'?'api/':'';var timeout=12000;var reqeust=axios.create({timeout:timeout,transformRequest:[function(data){if(typeof data==='string'){return data;}data=JSON.stringify(data);return data;}],transformResponse:[function(data){if(typeof data==='string'&&data.startsWith('{')){data=JSON.parse(data);}return data;}]});// 请求拦截器\nreqeust.interceptors.request.use(function(config){var token=sessionStorage.getItem(\"user\");var url=sessionStorage.getItem(\"text-url\");var strToken=JSON.parse(token)||{};config.url=url?\"\".concat(url).concat(baseURL).concat(config.url):\"\".concat(baseURL).concat(config.url);config.headers.Authorization=strToken.Authorization;return config;},function(error){error.msg='服务器异常，请联系管理员！';return Promise.resolve(error);});/**\n *响应拦截器\n* 自定义状态处理\n*/reqeust.interceptors.response.use(function(response){var data=response.data;if(!data){return data;}if(typeof data==='string'&&(data.startsWith('{')||data.startsWith('['))){return JSON.parse(data);}else{return data;}},function(error){_Toast.fail(\"\".concat(error.response.data.code));return Promise.reject(error.response);});export default reqeust;","map":{"version":3,"sources":["/Users/yuanfang/Downloads/Telegram Desktop/封存/advisory-h5/src/request/request.ts"],"names":["axios","baseURL","process","env","NODE_ENV","timeout","reqeust","create","transformRequest","data","JSON","stringify","transformResponse","startsWith","parse","interceptors","request","use","config","token","sessionStorage","getItem","url","strToken","headers","Authorization","error","msg","Promise","resolve","response","fail","code","reject"],"mappings":"kFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,GAAMC,CAAAA,OAAe,CAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAAzB,CAAwC,MAAxC,CAAiD,EAAzE,CACA,GAAMC,CAAAA,OAAe,CAAG,KAAxB,CAEA,GAAMC,CAAAA,OAAO,CAAGN,KAAK,CAACO,MAAN,CAAa,CAC5BF,OAAO,CAAPA,OAD4B,CAE5BG,gBAAgB,CAAE,CAAC,SAACC,IAAD,CAAU,CAC5B,GAAI,MAAQA,CAAAA,IAAR,GAAkB,QAAtB,CAAgC,CAC/B,MAAOA,CAAAA,IAAP,CACA,CACDA,IAAI,CAAGC,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAP,CACA,MAAOA,CAAAA,IAAP,CACA,CANiB,CAFU,CAS5BG,iBAAiB,CAAE,CAAC,SAACH,IAAD,CAAU,CAC7B,GAAI,MAAOA,CAAAA,IAAP,GAAgB,QAAhB,EAA4BA,IAAI,CAACI,UAAL,CAAgB,GAAhB,CAAhC,CAAsD,CACrDJ,IAAI,CAAGC,IAAI,CAACI,KAAL,CAAWL,IAAX,CAAP,CACA,CACD,MAAOA,CAAAA,IAAP,CACA,CALkB,CATS,CAAb,CAAhB,CAiBA;AACAH,OAAO,CAACS,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,SAACC,MAAD,CAAY,CAC5C,GAAMC,CAAAA,KAAU,CAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAnB,CACA,GAAMC,CAAAA,GAAG,CAAGF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAZ,CACA,GAAME,CAAAA,QAAQ,CAAGb,IAAI,CAACI,KAAL,CAAWK,KAAX,GAAqB,EAAtC,CACAD,MAAM,CAACI,GAAP,CAAaA,GAAG,WAAMA,GAAN,SAAYrB,OAAZ,SAAsBiB,MAAM,CAACI,GAA7B,YAAwCrB,OAAxC,SAAkDiB,MAAM,CAACI,GAAzD,CAAhB,CACAJ,MAAM,CAACM,OAAP,CAAeC,aAAf,CAA+BF,QAAQ,CAACE,aAAxC,CACA,MAAOP,CAAAA,MAAP,CACA,CAPD,CAOG,SAACQ,KAAD,CAAW,CACbA,KAAK,CAACC,GAAN,CAAY,eAAZ,CACA,MAAOC,CAAAA,OAAO,CAACC,OAAR,CAAgBH,KAAhB,CAAP,CACA,CAVD,EAYA;AACA;AACA;AACA,EACApB,OAAO,CAACS,YAAR,CAAqBe,QAArB,CAA8Bb,GAA9B,CAAkC,SAACa,QAAD,CAAwB,IACjDrB,CAAAA,IADiD,CACxCqB,QADwC,CACjDrB,IADiD,CAEzD,GAAI,CAACA,IAAL,CAAW,CACV,MAAOA,CAAAA,IAAP,CACA,CACD,GAAI,MAAOA,CAAAA,IAAP,GAAgB,QAAhB,GAA6BA,IAAI,CAACI,UAAL,CAAgB,GAAhB,GAAwBJ,IAAI,CAACI,UAAL,CAAgB,GAAhB,CAArD,CAAJ,CAAgF,CAC/E,MAAOH,CAAAA,IAAI,CAACI,KAAL,CAAWL,IAAX,CAAP,CACA,CAFD,IAEO,CACN,MAAOA,CAAAA,IAAP,CACA,CACD,CAVD,CAUG,SAACiB,KAAD,CAAW,CACb,OAAMK,IAAN,WAAcL,KAAK,CAACI,QAAN,CAAerB,IAAf,CAAoBuB,IAAlC,GACA,MAAOJ,CAAAA,OAAO,CAACK,MAAR,CAAeP,KAAK,CAACI,QAArB,CAAP,CACA,CAbD,EAcA,cAAexB,CAAAA,OAAf","sourcesContent":["import axios from 'axios'\nimport { Toast } from 'antd-mobile';\nimport { Response } from './entity.d';\nconst baseURL: string = process.env.NODE_ENV === 'production' ? 'api/' : '';\nconst timeout: number = 12000;\n\nconst reqeust = axios.create({\n timeout,\n transformRequest: [(data) => {\n  if (typeof (data) === 'string') {\n   return data\n  }\n  data = JSON.stringify(data)\n  return data\n }],\n transformResponse: [(data) => {\n  if (typeof data === 'string' && data.startsWith('{')) {\n   data = JSON.parse(data)\n  }\n  return data\n }]\n});\n\n// 请求拦截器\nreqeust.interceptors.request.use((config) => {\n const token: any = sessionStorage.getItem(\"user\")\n const url = sessionStorage.getItem(\"text-url\")\n const strToken = JSON.parse(token) || {}\n config.url = url ? `${url}${baseURL}${config.url}` : `${baseURL}${config.url}`\n config.headers.Authorization = strToken.Authorization;\n return config\n}, (error) => {\n error.msg = '服务器异常，请联系管理员！'\n return Promise.resolve(error)\n})\n\n/**\n *响应拦截器\n* 自定义状态处理\n*/\nreqeust.interceptors.response.use((response: Response) => {\n const { data } = response\n if (!data) {\n  return data;\n }\n if (typeof data === 'string' && (data.startsWith('{') || data.startsWith('['))) {\n  return JSON.parse(data);\n } else {\n  return data\n }\n}, (error) => {\n Toast.fail(`${error.response.data.code}`)\n return Promise.reject(error.response)\n})\nexport default reqeust;"]},"metadata":{},"sourceType":"module"}