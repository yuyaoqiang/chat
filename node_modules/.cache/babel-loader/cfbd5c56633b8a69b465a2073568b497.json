{"ast":null,"code":"import \"antd-mobile/lib/list-view/style/css\";\nimport _ListView from \"antd-mobile/lib/list-view\";\nimport \"antd-mobile/lib/pull-to-refresh/style/css\";\nimport _PullToRefresh from \"antd-mobile/lib/pull-to-refresh\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yuanfang/Downloads/Telegram Desktop/\\u5C01\\u5B58/advisory-h5/src/pages/home/component/list/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport RenderItem from \"./item\";\nimport { observer, inject } from \"mobx-react\";\nimport { queryPages } from \"../../request\";\nimport usePaginationHooks from \"@hooks/usePaginationHooks\";\nimport \"./style.scss\";\n\nconst RenderList = props => {\n  _s();\n\n  const ref = useRef(null);\n  const [containerHeieght, setContainerHeight] = useState(5);\n  const {\n    setIndicator,\n    setRefresing,\n    indicator,\n    refreshing,\n    dataSource\n  } = usePaginationHooks({\n    queryPages\n  });\n  const {\n    commonState,\n    userState\n  } = props;\n  useEffect(() => {\n    const htmlFont = Number(document.documentElement.style.fontSize.slice(0, 2));\n    const clientHeight = commonState.clientHeight;\n    const footerHeight = commonState.footerHeight; //@ts-ignore\n\n    const top = ReactDOM.findDOMNode(ref.current).offsetTop;\n    setContainerHeight((clientHeight - footerHeight - top) / htmlFont);\n  });\n\n  const row = (rowData, sectionID, rowID) => {\n    return /*#__PURE__*/_jsxDEV(RenderItem, {\n      data: rowData,\n      rowId: rowID,\n      user: userState.user\n    }, rowID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_ListView, {\n    className: \"home-list-container\",\n    ref: ref,\n    style: {\n      height: `${containerHeieght}rem`\n    },\n    dataSource: dataSource,\n    renderFooter: () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: !indicator ? '正在加载中.....' : '没有更多数据'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this);\n    },\n    renderRow: row,\n    useBodyScroll: false //@ts-ignore\n    ,\n    pullToRefresh: /*#__PURE__*/_jsxDEV(_PullToRefresh, {\n      refreshing: refreshing,\n      onRefresh: setRefresing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this),\n    onEndReached: setIndicator,\n    pageSize: 20\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n\n_s(RenderList, \"HkG1Espnz9zQwixLxut/pNyfCZo=\", false, function () {\n  return [usePaginationHooks];\n});\n\n_c = RenderList;\nexport default inject('commonState', 'userState')(observer(RenderList));\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderList\");","map":{"version":3,"sources":["/Users/yuanfang/Downloads/Telegram Desktop/封存/advisory-h5/src/pages/home/component/list/index.tsx"],"names":["React","useEffect","useRef","useState","ReactDOM","RenderItem","observer","inject","queryPages","usePaginationHooks","RenderList","props","ref","containerHeieght","setContainerHeight","setIndicator","setRefresing","indicator","refreshing","dataSource","commonState","userState","htmlFont","Number","document","documentElement","style","fontSize","slice","clientHeight","footerHeight","top","findDOMNode","current","offsetTop","row","rowData","sectionID","rowID","user","height","textAlign"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,QAAvB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,YAAjC;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,OAAO,cAAP;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAgB;AAAA;;AAClC,QAAMC,GAAQ,GAAGV,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM,CAACW,gBAAD,EAAmBC,kBAAnB,IAAyCX,QAAQ,CAAC,CAAD,CAAvD;AACA,QAAM;AAAEY,IAAAA,YAAF;AAAgBC,IAAAA,YAAhB;AAA8BC,IAAAA,SAA9B;AAAyCC,IAAAA,UAAzC;AAAqDC,IAAAA;AAArD,MAAoEV,kBAAkB,CAAC;AAAED,IAAAA;AAAF,GAAD,CAA5F;AACA,QAAM;AAAEY,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA6BV,KAAnC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMqB,QAAgB,GAAGC,MAAM,CAACC,QAAQ,CAACC,eAAT,CAAyBC,KAAzB,CAA+BC,QAA/B,CAAwCC,KAAxC,CAA8C,CAA9C,EAAiD,CAAjD,CAAD,CAA/B;AACA,UAAMC,YAAoB,GAAGT,WAAW,CAACS,YAAzC;AACA,UAAMC,YAAoB,GAAGV,WAAW,CAACU,YAAzC,CAHe,CAIf;;AACA,UAAMC,GAAG,GAAG3B,QAAQ,CAAC4B,WAAT,CAAqBpB,GAAG,CAACqB,OAAzB,EAAkCC,SAA9C;AACApB,IAAAA,kBAAkB,CAAC,CAACe,YAAY,GAAGC,YAAf,GAA8BC,GAA/B,IAAsCT,QAAvC,CAAlB;AACA,GAPQ,CAAT;;AASA,QAAMa,GAAG,GAAG,CAACC,OAAD,EAAeC,SAAf,EAA+BC,KAA/B,KAA8C;AACzD,wBACC,QAAC,UAAD;AAAwB,MAAA,IAAI,EAAEF,OAA9B;AAAuC,MAAA,KAAK,EAAEE,KAA9C;AAAqD,MAAA,IAAI,EAAEjB,SAAS,CAACkB;AAArE,OAAiBD,KAAjB;AAAA;AAAA;AAAA;AAAA,YADD;AAGA,GAJD;;AAMA,sBACC;AACC,IAAA,SAAS,EAAC,qBADX;AAEC,IAAA,GAAG,EAAE1B,GAFN;AAGC,IAAA,KAAK,EAAE;AAAE4B,MAAAA,MAAM,EAAG,GAAE3B,gBAAiB;AAA9B,KAHR;AAIC,IAAA,UAAU,EAAEM,UAJb;AAKC,IAAA,YAAY,EACX,MAAM;AACL,0BAAO;AAAK,QAAA,KAAK,EAAE;AAAEsB,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA,kBACL,CAACxB,SAAD,GAAa,YAAb,GAA4B;AADvB;AAAA;AAAA;AAAA;AAAA,cAAP;AAGA,KAVH;AAYC,IAAA,SAAS,EAAEkB,GAZZ;AAaC,IAAA,aAAa,EAAE,KAbhB,CAcC;AAdD;AAeC,IAAA,aAAa,eAAE;AAAe,MAAA,UAAU,EAAEjB,UAA3B;AAAuC,MAAA,SAAS,EAAEF;AAAlD;AAAA;AAAA;AAAA;AAAA,YAfhB;AAgBC,IAAA,YAAY,EAAED,YAhBf;AAiBC,IAAA,QAAQ,EAAE;AAjBX;AAAA;AAAA;AAAA;AAAA,UADD;AAqBA,CA1CD;;GAAML,U;UAGqED,kB;;;KAHrEC,U;AA2CN,eAAeH,MAAM,CAAC,aAAD,EAAgB,WAAhB,CAAN,CAAoCD,QAAQ,CAACI,UAAD,CAA5C,CAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\nimport { ListView, PullToRefresh } from \"antd-mobile\";\nimport ReactDOM from \"react-dom\"\nimport RenderItem from \"./item\"\nimport { observer, inject } from \"mobx-react\"\nimport { queryPages } from \"../../request\"\nimport usePaginationHooks from \"@hooks/usePaginationHooks\"\nimport \"./style.scss\"\n\nconst RenderList = (props: any) => {\n const ref: any = useRef(null);\n const [containerHeieght, setContainerHeight] = useState(5)\n const { setIndicator, setRefresing, indicator, refreshing, dataSource } = usePaginationHooks({ queryPages });\n const { commonState, userState } = props;\n\n useEffect(() => {\n  const htmlFont: number = Number(document.documentElement.style.fontSize.slice(0, 2));\n  const clientHeight: number = commonState.clientHeight;\n  const footerHeight: number = commonState.footerHeight;\n  //@ts-ignore\n  const top = ReactDOM.findDOMNode(ref.current).offsetTop\n  setContainerHeight((clientHeight - footerHeight - top) / htmlFont)\n })\n\n const row = (rowData: any, sectionID: any, rowID: any) => {\n  return (\n   <RenderItem key={rowID} data={rowData} rowId={rowID} user={userState.user} />\n  );\n };\n\n return (\n  <ListView\n   className=\"home-list-container\"\n   ref={ref}\n   style={{ height: `${containerHeieght}rem` }}\n   dataSource={dataSource}\n   renderFooter={\n    () => {\n     return <div style={{ textAlign: 'center' }}>\n      {!indicator ? '正在加载中.....' : '没有更多数据'}\n     </div>\n    }\n   }\n   renderRow={row}\n   useBodyScroll={false}\n   //@ts-ignore\n   pullToRefresh={<PullToRefresh refreshing={refreshing} onRefresh={setRefresing} />}\n   onEndReached={setIndicator}\n   pageSize={20}\n  />\n )\n}\nexport default inject('commonState', 'userState')((observer(RenderList)));"]},"metadata":{},"sourceType":"module"}