{"ast":null,"code":"import \"antd-mobile/lib/pull-to-refresh/style/css\";\nimport _PullToRefresh from \"antd-mobile/lib/pull-to-refresh\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport \"antd-mobile/lib/list-view/style/css\";\nimport _ListView from \"antd-mobile/lib/list-view\";\n\nvar _jsxFileName = \"/Users/yuanfang/Downloads/Telegram Desktop/\\u5C01\\u5B58/advisory-h5/src/pages/userInfo/component/pushList/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport ReactDOM from \"react-dom\";\nimport RenderItem from \"./item\";\nimport { queryPagination } from \"../../request\";\nimport \"./style.scss\";\nlet pageNo = 1;\nconst listDataSource = new _ListView.DataSource({\n  rowHasChanged: (row1, row2) => row1 !== row2\n});\nlet rData = [];\n\nconst PushList = props => {\n  _s();\n\n  const ref = useRef(null);\n  const [containerHeieght, setContainerHeight] = useState(5);\n  const [isLoading, setIsLoading] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const [pageSize] = useState(20);\n  const [isLastPage, setIsLastPage] = useState(false);\n  const [dataSource, setDataSource] = useState(listDataSource);\n  const {\n    commonState,\n    userState\n  } = props;\n  useEffect(() => {\n    const htmlFont = Number(document.documentElement.style.fontSize.slice(0, 2));\n    const clientHeight = commonState.clientHeight;\n    const footerHeight = commonState.footerHeight; //@ts-ignore\n\n    const top = ReactDOM.findDOMNode(ref.current).offsetTop;\n    setContainerHeight((clientHeight - footerHeight - top) / htmlFont);\n    onRefresh();\n  }, []);\n\n  const onRefresh = () => {\n    pageNo = 1;\n    setRefreshing(true);\n    setIsLoading(true);\n    queryPagination({\n      pageNo,\n      pageSize\n    }).then(res => {\n      const {\n        list,\n        isLastPage\n      } = res.data;\n      const {\n        extdata\n      } = res;\n      userState.setPullRed(extdata.recommendMatchNum, extdata.redListHits);\n      rData = list;\n      setRefreshing(false);\n      setIsLoading(false);\n      setIsLastPage(isLastPage);\n      setDataSource(dataSource.cloneWithRows(rData));\n    });\n  };\n\n  const onEndReached = async () => {\n    pageNo = pageNo + 1;\n    if (isLastPage || isLoading) return;\n    setIsLoading(true);\n    queryPagination({\n      pageNo,\n      pageSize\n    }).then(res => {\n      const {\n        list,\n        isLastPage\n      } = res.data;\n      rData = [...rData, ...list];\n      setIsLastPage(isLastPage);\n      setDataSource(dataSource.cloneWithRows(rData));\n      setIsLoading(false);\n    });\n  };\n\n  const row = (rowData, sectionID, rowID) => {\n    return /*#__PURE__*/_jsxDEV(RenderItem, {\n      data: rowData,\n      onRefresh: onRefresh,\n      isTop: rowID === \"0\"\n    }, rowID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_ListView, {\n    className: \"push-container\",\n    ref: ref,\n    style: {\n      height: `${containerHeieght}rem`\n    },\n    dataSource: dataSource,\n    renderFooter: () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: isLoading ? '正在加载中.....' : '没有更多数据'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this);\n    },\n    renderRow: row,\n    useBodyScroll: false //@ts-ignore\n    ,\n    pullToRefresh: /*#__PURE__*/_jsxDEV(_PullToRefresh, {\n      refreshing: refreshing,\n      onRefresh: onRefresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }, this),\n    onEndReached: onEndReached,\n    pageSize: 20\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this);\n};\n\n_s(PushList, \"sT3FzzzN3zG+RJmdG1TTzPHxiF8=\");\n\n_c = PushList;\nexport default inject('commonState', 'userState')(observer(PushList));\n\nvar _c;\n\n$RefreshReg$(_c, \"PushList\");","map":{"version":3,"sources":["/Users/yuanfang/Downloads/Telegram Desktop/封存/advisory-h5/src/pages/userInfo/component/pushList/index.tsx"],"names":["React","useEffect","useRef","useState","observer","inject","ReactDOM","RenderItem","queryPagination","pageNo","listDataSource","DataSource","rowHasChanged","row1","row2","rData","PushList","props","ref","containerHeieght","setContainerHeight","isLoading","setIsLoading","refreshing","setRefreshing","pageSize","isLastPage","setIsLastPage","dataSource","setDataSource","commonState","userState","htmlFont","Number","document","documentElement","style","fontSize","slice","clientHeight","footerHeight","top","findDOMNode","current","offsetTop","onRefresh","then","res","list","data","extdata","setPullRed","recommendMatchNum","redListHits","cloneWithRows","onEndReached","row","rowData","sectionID","rowID","height","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\nimport { ListView, PullToRefresh } from \"antd-mobile\";\nimport { observer, inject } from \"mobx-react\"\nimport ReactDOM from \"react-dom\"\nimport RenderItem from \"./item\"\nimport { queryPagination } from \"../../request\"\nimport \"./style.scss\"\nlet pageNo = 1;\nconst listDataSource = new ListView.DataSource({\n rowHasChanged: (row1: any, row2: any) => row1 !== row2,\n});\nlet rData: any[] = []\nconst PushList = (props: any) => {\n const ref: any = useRef(null);\n const [containerHeieght, setContainerHeight] = useState(5)\n const [isLoading, setIsLoading] = useState(false);\n const [refreshing, setRefreshing] = useState(false);\n const [pageSize] = useState(20);\n const [isLastPage, setIsLastPage] = useState(false);\n const [dataSource, setDataSource] = useState(listDataSource);\n const { commonState, userState } = props;\n\n useEffect(() => {\n  const htmlFont: number = Number(document.documentElement.style.fontSize.slice(0, 2));\n  const clientHeight: number = commonState.clientHeight;\n  const footerHeight: number = commonState.footerHeight;\n  //@ts-ignore\n  const top = ReactDOM.findDOMNode(ref.current).offsetTop\n  setContainerHeight((clientHeight - footerHeight - top) / htmlFont);\n  onRefresh();\n }, [])\n\n const onRefresh = () => {\n  pageNo = 1;\n  setRefreshing(true)\n  setIsLoading(true)\n  queryPagination({ pageNo, pageSize }).then((res: any) => {\n   const { list, isLastPage } = res.data;\n   const { extdata } = res;\n   userState.setPullRed(extdata.recommendMatchNum, extdata.redListHits)\n   rData = list\n   setRefreshing(false)\n   setIsLoading(false)\n   setIsLastPage(isLastPage)\n   setDataSource(dataSource.cloneWithRows(rData));\n  })\n };\n const onEndReached = async () => {\n  pageNo = pageNo + 1\n  if (isLastPage || isLoading) return;\n  setIsLoading(true)\n  queryPagination({ pageNo, pageSize }).then(res => {\n   const { list, isLastPage } = res.data;\n   rData = [...rData, ...list]\n   setIsLastPage(isLastPage)\n   setDataSource(dataSource.cloneWithRows(rData));\n   setIsLoading(false)\n  })\n };\n\n\n\n const row = (rowData: any, sectionID: any, rowID: any) => {\n  return (\n   <RenderItem key={rowID} data={rowData} onRefresh={onRefresh} isTop={rowID === \"0\"} />\n  );\n };\n\n return (\n  <ListView\n   className=\"push-container\"\n   ref={ref}\n   style={{ height: `${containerHeieght}rem` }}\n   dataSource={dataSource}\n   renderFooter={\n    () => {\n     return <div style={{ textAlign: 'center' }}>\n      {isLoading ? '正在加载中.....' : '没有更多数据'}\n     </div>\n    }\n   }\n   renderRow={row}\n   useBodyScroll={false}\n   //@ts-ignore\n   pullToRefresh={<PullToRefresh\n    refreshing={refreshing}\n    onRefresh={onRefresh}\n   />}\n   onEndReached={onEndReached}\n   pageSize={20}\n  />\n )\n}\nexport default inject('commonState', 'userState')((observer(PushList)));"]},"metadata":{},"sourceType":"module"}