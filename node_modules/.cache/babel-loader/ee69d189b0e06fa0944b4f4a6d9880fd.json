{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import\"antd-mobile/lib/toast/style/css\";import _Toast from\"antd-mobile/lib/toast\";import _defineProperty from\"/Users/yuanfang/Downloads/Telegram Desktop/\\u5C01\\u5B58/advisory-h5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/yuanfang/Downloads/Telegram Desktop/\\u5C01\\u5B58/advisory-h5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/yuanfang/Downloads/Telegram Desktop/\\u5C01\\u5B58/advisory-h5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import HeaderBar from\"@components/header\";import{useHistory}from\"react-router-dom\";import{changePwd}from\"./request\";import\"./style.scss\";var Password=function Password(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),info=_useState2[0],setInfo=_useState2[1];var _useHistory=useHistory(),goBack=_useHistory.goBack,push=_useHistory.push;var change=function change(e,key){setInfo(_objectSpread(_objectSpread({},info),{},_defineProperty({},key,e.target.value)));};var changePwdHandle=function changePwdHandle(){var oldPwd=info.oldPwd,newPwd=info.newPwd,entryPwd=info.entryPwd;if(!oldPwd||!newPwd||!entryPwd){_Toast.fail(\"您有选项未填写\");return;}if(newPwd!==entryPwd){_Toast.fail(\"新密码与确认密码不一致\");return;}_Toast.loading(\"修改中...\");changePwd({oldPwd:oldPwd,newPwd:newPwd}).then(function(data){_Toast.success(\"修改成功\");push(\"userInfo\");}).catch(function(err){_Toast.success(\"修改失败\");});};return/*#__PURE__*/_jsxs(\"div\",{className:\"password-wrap\",children:[/*#__PURE__*/_jsx(HeaderBar,{goback:goBack,title:\"修改密码\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"inputs\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icons pw\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u539F\\u5BC6\\u7801\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",onChange:function onChange(e){change(e,\"oldPwd\");},placeholder:\"\\u8BF7\\u8F93\\u5165\\u539F\\u5BC6\\u7801\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"inputs\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icons pw\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u65B0\\u5BC6\\u7801\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",onChange:function onChange(e){change(e,\"newPwd\");},placeholder:\"6-18\\u4F4D\\u5927\\u5C0F\\u5199\\u5B57\\u6BCD+\\u6570\\u5B57\\u7EC4\\u5408\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"inputs\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icons pw\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u786E\\u8BA4\\u5BC6\\u7801\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",onChange:function onChange(e){change(e,\"entryPwd\");},placeholder:\"\\u786E\\u8BA4\\u5BC6\\u7801\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pay-on-btn\",onClick:function onClick(){return changePwdHandle();},children:\"\\u786E\\u8BA4\"})]});};export default Password;","map":{"version":3,"sources":["/Users/yuanfang/Downloads/Telegram Desktop/封存/advisory-h5/src/pages/password/index.tsx"],"names":["React","useState","HeaderBar","useHistory","changePwd","Password","info","setInfo","goBack","push","change","e","key","target","value","changePwdHandle","oldPwd","newPwd","entryPwd","fail","loading","then","data","success","catch","err"],"mappings":"ytBAAA,MAAOA,CAAAA,KAAP,EAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,SAAT,KAA0B,WAA1B,CACA,MAAO,cAAP,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,eACGJ,QAAQ,CAAM,EAAN,CADX,wCACdK,IADc,eACRC,OADQ,+BAEIJ,UAAU,EAFd,CAEbK,MAFa,aAEbA,MAFa,CAELC,IAFK,aAELA,IAFK,CAGrB,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,CAAD,CAASC,GAAT,CAAyB,CACtCL,OAAO,gCAAMD,IAAN,wBAAaM,GAAb,CAAmBD,CAAC,CAACE,MAAF,CAASC,KAA5B,GAAP,CACD,CAFD,CAGA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,IAEpBC,CAAAA,MAFoB,CAESV,IAFT,CAEpBU,MAFoB,CAEZC,MAFY,CAESX,IAFT,CAEZW,MAFY,CAEJC,QAFI,CAESZ,IAFT,CAEJY,QAFI,CAG5B,GAAI,CAACF,MAAD,EAAW,CAACC,MAAZ,EAAsB,CAACC,QAA3B,CAAqC,CACnC,OAAMC,IAAN,CAAW,SAAX,EACA,OACD,CACD,GAAIF,MAAM,GAAKC,QAAf,CAAyB,CACvB,OAAMC,IAAN,CAAW,aAAX,EACA,OACD,CACD,OAAMC,OAAN,CAAc,QAAd,EACAhB,SAAS,CAAC,CAAEY,MAAM,CAANA,MAAF,CAAUC,MAAM,CAANA,MAAV,CAAD,CAAT,CAA8BI,IAA9B,CAAmC,SAAAC,IAAI,CAAI,CACzC,OAAMC,OAAN,CAAc,MAAd,EACAd,IAAI,CAAC,UAAD,CAAJ,CACD,CAHD,EAGGe,KAHH,CAGS,SAAAC,GAAG,CAAE,CACZ,OAAMF,OAAN,CAAc,MAAd,EACD,CALD,EAMD,CAlBD,CAmBA,mBACE,aAAK,SAAS,CAAC,eAAf,wBACE,KAAC,SAAD,EAAW,MAAM,CAAEf,MAAnB,CAA2B,KAAK,CAAE,MAAlC,EADF,cAEE,aAAK,SAAS,CAAC,MAAf,wBACE,WAAG,SAAS,CAAC,QAAb,wBACE,UAAG,SAAS,CAAC,UAAb,EADF,cAEE,4CAFF,cAGE,cAAO,IAAI,CAAC,UAAZ,CAAuB,QAAQ,CAAE,kBAACG,CAAD,CAAO,CAAED,MAAM,CAACC,CAAD,CAAI,QAAJ,CAAN,CAAqB,CAA/D,CAAiE,WAAW,CAAC,sCAA7E,EAHF,GADF,cAME,WAAG,SAAS,CAAC,QAAb,wBACE,UAAG,SAAS,CAAC,UAAb,EADF,cAEE,4CAFF,cAGE,cAAO,IAAI,CAAC,UAAZ,CAAuB,QAAQ,CAAE,kBAACA,CAAD,CAAO,CAAED,MAAM,CAACC,CAAD,CAAI,QAAJ,CAAN,CAAqB,CAA/D,CAAiE,WAAW,CAAC,mEAA7E,EAHF,GANF,cAWE,WAAG,SAAS,CAAC,QAAb,wBACE,UAAG,SAAS,CAAC,UAAb,EADF,cAEE,kDAFF,cAGE,cAAO,IAAI,CAAC,UAAZ,CAAuB,QAAQ,CAAE,kBAACA,CAAD,CAAO,CAAED,MAAM,CAACC,CAAD,CAAI,UAAJ,CAAN,CAAuB,CAAjE,CAAmE,WAAW,CAAC,0BAA/E,EAHF,GAXF,GAFF,cAmBE,YAAK,SAAS,CAAC,YAAf,CAA4B,OAAO,CAAE,yBAAMI,CAAAA,eAAe,EAArB,EAArC,0BAnBF,GADF,CAuBD,CAhDD,CAiDA,cAAeV,CAAAA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport HeaderBar from \"@components/header\"\nimport { useHistory } from \"react-router-dom\";\nimport { changePwd } from \"./request\"\nimport \"./style.scss\"\nimport { Toast } from \"antd-mobile\";\nconst Password = () => {\n  const [info, setInfo] = useState<any>({})\n  const { goBack, push } = useHistory();\n  const change = (e: any, key: string) => {\n    setInfo({ ...info, [key]: e.target.value })\n  }\n  const changePwdHandle = () => {\n\n    const { oldPwd, newPwd, entryPwd } = info;\n    if (!oldPwd || !newPwd || !entryPwd) {\n      Toast.fail(\"您有选项未填写\");\n      return;\n    }\n    if (newPwd !== entryPwd) {\n      Toast.fail(\"新密码与确认密码不一致\");\n      return;\n    }\n    Toast.loading(\"修改中...\")\n    changePwd({ oldPwd, newPwd }).then(data => {\n      Toast.success(\"修改成功\");\n      push(\"userInfo\");\n    }).catch(err=>{\n      Toast.success(\"修改失败\");\n    })\n  }\n  return (\n    <div className=\"password-wrap\">\n      <HeaderBar goback={goBack} title={\"修改密码\"} />\n      <div className=\"main\">\n        <p className=\"inputs\">\n          <i className=\"icons pw\"></i>\n          <span>原密码</span>\n          <input type=\"password\" onChange={(e) => { change(e, \"oldPwd\") }} placeholder=\"请输入原密码\" />\n        </p>\n        <p className=\"inputs\">\n          <i className=\"icons pw\"></i>\n          <span>新密码</span>\n          <input type=\"password\" onChange={(e) => { change(e, \"newPwd\") }} placeholder=\"6-18位大小写字母+数字组合\" />\n        </p>\n        <p className=\"inputs\">\n          <i className=\"icons pw\"></i>\n          <span>确认密码</span>\n          <input type=\"password\" onChange={(e) => { change(e, \"entryPwd\") }} placeholder=\"确认密码\" />\n        </p>\n      </div>\n      <div className=\"pay-on-btn\" onClick={() => changePwdHandle()}>确认</div>\n    </div>\n  )\n}\nexport default Password;"]},"metadata":{},"sourceType":"module"}